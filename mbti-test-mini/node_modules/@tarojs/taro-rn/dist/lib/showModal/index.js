import React from 'react';
import { Text } from 'react-native';
import RootSiblings from 'react-native-root-siblings';
import Dialog from './Dialog';
function showModal(obj) {
    const { title = '', content = '', showCancel = true, cancelText = '取消', cancelColor = '#000000', confirmText = '确定', confirmColor = '#3CC51F', success, fail, complete } = obj || {};
    let sibling;
    return new Promise((resolve, reject) => {
        function onConfirm() {
            const res = { errMsg: 'showModal:ok', confirm: true, cancel: false };
            sibling && sibling.destroy();
            sibling = undefined;
            success === null || success === void 0 ? void 0 : success(res);
            complete === null || complete === void 0 ? void 0 : complete(res);
            resolve(res);
        }
        function onCancel() {
            const res = { errMsg: 'showModal:cancel', confirm: false, cancel: true };
            sibling && sibling.destroy();
            sibling = undefined;
            success === null || success === void 0 ? void 0 : success(res);
            complete === null || complete === void 0 ? void 0 : complete(res);
            resolve(res);
        }
        try {
            sibling = new RootSiblings(React.createElement(Dialog, { visible: true, autoDectect: true, title: title, onClose: onCancel, buttons: [
                    showCancel && {
                        type: cancelColor,
                        label: cancelText,
                        onPress: onCancel
                    },
                    {
                        type: confirmColor,
                        label: confirmText,
                        onPress: onConfirm
                    }
                ].filter(Boolean) },
                React.createElement(Text, null, content)));
        }
        catch (e) {
            const res = { errMsg: `showModal fail:${e.message}` };
            fail === null || fail === void 0 ? void 0 : fail(res);
            complete === null || complete === void 0 ? void 0 : complete(res);
            reject(res);
        }
    });
}
export { showModal };
//# sourceMappingURL=index.js.map