import React from 'react';
import RootSiblings from 'react-native-root-siblings';
import ActionSheet from './ActionSheet';
function showActionSheet(obj) {
    const { itemList = [], itemColor = '#000000', success, fail, complete } = obj || {};
    const autoDectect = true;
    const type = 'ios';
    return new Promise((resolve, reject) => {
        let sibling;
        function onSuccess(tapIndex) {
            sibling && sibling.destroy();
            sibling = undefined;
            const res = { tapIndex, errMsg: 'showActionSheet:ok' };
            success === null || success === void 0 ? void 0 : success(res);
            complete === null || complete === void 0 ? void 0 : complete(res);
            resolve(res);
        }
        function onFail() {
            const res = { errMsg: 'showActionSheet:fail cancel' };
            sibling && sibling.destroy();
            sibling = undefined;
            fail === null || fail === void 0 ? void 0 : fail(res);
            complete === null || complete === void 0 ? void 0 : complete(res);
            reject(res);
        }
        sibling = new RootSiblings(React.createElement(ActionSheet, { autoDectect: autoDectect, type: type, visible: false, onClose: onFail, menus: itemList.map((item, index) => {
                return {
                    type: 'default',
                    label: item,
                    textStyle: { color: itemColor },
                    onPress: onSuccess.bind(this, index)
                };
            }), actions: [
                {
                    type: 'default',
                    label: '取消',
                    textStyle: { color: itemColor },
                    onPress: onFail.bind(this)
                }
            ] }));
        // hack 的做法。不推荐
        setTimeout(() => {
            sibling.update(React.createElement(ActionSheet, { autoDectect: autoDectect, type: type, visible: true, onClose: onFail, menus: itemList.map((item, index) => {
                    return {
                        type: 'default',
                        label: item,
                        textStyle: { color: itemColor },
                        onPress: onSuccess.bind(this, index)
                    };
                }), actions: [
                    {
                        type: 'default',
                        label: '取消',
                        textStyle: { color: itemColor },
                        onPress: onFail.bind(this)
                    }
                ] }));
        }, 100);
    });
}
export { showActionSheet };
//# sourceMappingURL=index.js.map