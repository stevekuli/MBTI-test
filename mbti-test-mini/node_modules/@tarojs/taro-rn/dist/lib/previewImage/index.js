import React from 'react';
import { View, ActivityIndicator, StyleSheet, Alert, Modal } from 'react-native';
import RootSiblings from 'react-native-root-siblings';
import ImageViewer from 'react-native-image-zoom-viewer';
import { saveMedia } from '../media';
import { downloadFile } from '../file';
const styles = StyleSheet.create({
    mask: {
        elevation: 1,
        position: 'absolute',
        backgroundColor: '#000000',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0
    }
});
export function previewImage(obj) {
    const { current, urls, success, fail, complete } = obj || {};
    const index = urls.indexOf(current);
    if (index === -1) {
        throw new Error('"current" or "urls" is invalid');
    }
    let sibling;
    function onSwipeDown() {
        sibling === null || sibling === void 0 ? void 0 : sibling.destroy();
        sibling = undefined;
    }
    function onSuccess() {
        const rsp = { errMsg: 'previewImage:ok' };
        onSwipeDown();
        success === null || success === void 0 ? void 0 : success(rsp);
        complete === null || complete === void 0 ? void 0 : complete(rsp);
    }
    function onFail(e) {
        onSwipeDown();
        fail === null || fail === void 0 ? void 0 : fail(Object.assign({ errMsg: 'err' }, e));
        complete === null || complete === void 0 ? void 0 : complete('err', ...e);
    }
    // 长按保存图片
    function saveImage(uri) {
        downloadFile({
            url: uri,
            success({ tempFilePath }) {
                const opts = {
                    filePath: tempFilePath,
                    success() {
                        Alert.alert('Success', '图片保存成功', [
                            {
                                text: 'OK'
                            }
                        ], { cancelable: false });
                    },
                    fail(err) {
                        Alert.alert('Error', err, [
                            {
                                text: 'OK'
                            }
                        ], { cancelable: false });
                    }
                };
                saveMedia(opts, 'photo', 'saveToLocalByLongPress');
            }
        });
    }
    try {
        sibling = new RootSiblings(React.createElement(Modal, { style: styles.mask, onRequestClose: onSwipeDown },
            React.createElement(ImageViewer, { imageUrls: urls.map((item) => {
                    return {
                        url: item,
                        props: ''
                    };
                }), index: index === -1 ? 0 : index, onCancel: onSuccess, onClick: onSuccess, onSwipeDown: onSuccess, onSave: saveImage, useNativeDriver: true, enableSwipeDown: true, menuContext: {
                    saveToLocal: '保存图片到相册',
                    cancel: '取消'
                }, loadingRender: () => {
                    return (React.createElement(View, { style: { flex: 1, justifyContent: 'center', alignItems: 'center' } },
                        React.createElement(ActivityIndicator, { size: "large", color: '#999' })));
                } })));
    }
    catch (e) {
        onFail(e);
    }
}
//# sourceMappingURL=index.js.map