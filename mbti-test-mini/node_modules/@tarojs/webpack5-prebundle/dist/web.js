"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebPrebundle = exports.VirtualModule = void 0;
// Inspired by [vite](https://github.com/vitejs/vite)
/** @license
 * MIT License
 *
 * Copyright (c) 2019-present, Yuxi (Evan) You and Vite contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
const helper_1 = require("@tarojs/helper");
const path_1 = __importDefault(require("path"));
const perf_hooks_1 = require("perf_hooks");
const webpack_virtual_modules_1 = __importDefault(require("webpack-virtual-modules"));
const prebundle_1 = __importDefault(require("./prebundle"));
const utils_1 = require("./utils");
const constant_1 = require("./utils/constant");
const TaroModuleFederationPlugin_1 = __importDefault(require("./webpack/TaroModuleFederationPlugin"));
exports.VirtualModule = new webpack_virtual_modules_1.default();
class WebPrebundle extends prebundle_1.default {
    constructor(config, option) {
        super(config, option);
        this.config = config;
        this.option = option;
        if (this.mode !== 'production') {
            this.mainFields.unshift('main:h5');
        }
    }
    buildLib() {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            const BUILD_LIB_START = perf_hooks_1.performance.now();
            const customWebpackConfig = this.option.webpack;
            const exposes = {};
            const devtool = this.config.enableSourceMap && 'hidden-source-map';
            const mainBuildOutput = this.chain.output.entries();
            const output = {
                chunkFilename: this.config.chunkFilename,
                chunkLoadingGlobal: mainBuildOutput.chunkLoadingGlobal,
                globalObject: mainBuildOutput.globalObject,
                path: this.remoteCacheDir,
            };
            this.metadata.mfHash = (0, utils_1.getMfHash)({
                bundleHash: this.metadata.bundleHash,
                mode: this.mode,
                devtool,
                output
            });
            if (this.preMetadata.mfHash !== this.metadata.mfHash) {
                this.isUseCache = false;
                helper_1.fs.existsSync(this.remoteCacheDir) && helper_1.fs.emptyDirSync(this.remoteCacheDir);
                for (const id of this.deps.keys()) {
                    const flatId = (0, utils_1.flattenId)(id);
                    exposes[`./${id}`] = path_1.default.join(this.prebundleCacheDir, `${flatId}.js`);
                }
                this.metadata.runtimeRequirements = new Set();
                const compiler = this.getRemoteWebpackCompiler({
                    cache: {
                        type: 'filesystem',
                        cacheDirectory: path_1.default.join(this.cacheDir, 'webpack-cache'),
                        buildDependencies: {
                            config: Object.values(exposes)
                        }
                    },
                    devtool,
                    entry: path_1.default.resolve(__dirname, './webpack/index.js'),
                    mode: this.mode,
                    output,
                    plugins: [
                        new TaroModuleFederationPlugin_1.default({
                            name: constant_1.MF_NAME,
                            filename: 'remoteEntry.js',
                            runtime: 'runtime',
                            exposes
                        }, {
                            deps: this.deps,
                            env: this.env,
                            platformType: this.platformType,
                            remoteAssets: this.metadata.remoteAssets,
                            runtimeRequirements: this.metadata.runtimeRequirements
                        })
                    ]
                }, customWebpackConfig);
                this.metadata.remoteAssets = yield new Promise((resolve, reject) => {
                    compiler.run((error, stats) => {
                        compiler.close(err => {
                            var _a;
                            if (error || err)
                                return reject(error || err);
                            const { assets = [], errors = [] } = stats.toJson();
                            if (errors[0])
                                return reject(errors[0]);
                            const remoteAssets = ((_a = assets === null || assets === void 0 ? void 0 : assets.filter(item => item.name !== 'runtime.js')) === null || _a === void 0 ? void 0 : _a.map(item => ({
                                name: path_1.default.join('prebundle', item.name)
                            }))) || [];
                            resolve(remoteAssets);
                        });
                    });
                });
            }
            else {
                this.metadata.runtimeRequirements = new Set(this.preMetadata.runtimeRequirements);
                this.metadata.remoteAssets = this.preMetadata.remoteAssets;
            }
            if (this.mode === 'production' || ((_b = (_a = this.config.devServer) === null || _a === void 0 ? void 0 : _a.devMiddleware) === null || _b === void 0 ? void 0 : _b.writeToDisk)) {
                helper_1.fs.copy(this.remoteCacheDir, mainBuildOutput.path);
            }
            this.measure(`Build remote ${constant_1.MF_NAME} duration`, BUILD_LIB_START);
        });
    }
    /**
     * TODO:
     * - [ ] 开发环境依赖更新触发 ws 热加载心跳
     * - [ ] 回归 react、vue 热更新状态
     */
    run() {
        const _super = Object.create(null, {
            run: { get: () => super.run }
        });
        return __awaiter(this, void 0, void 0, function* () {
            const publicPath = (0, utils_1.parsePublicPath)(this.config.publicPath);
            /** Note: 新增 web 虚拟入口，用于同步加载 webpack 动态依赖 */
            this.addPlugin('VirtualModule', exports.VirtualModule);
            this.isUseCache = true;
            /** 扫描出所有的 node_modules 依赖 */
            const entries = yield this.getEntries(this.entryPath);
            const { include = [], exclude = [] } = this.option;
            const idx = exclude.findIndex(e => e === '@tarojs/runtime');
            if (idx >= 0) {
                exclude.splice(idx, 1);
                console.log(helper_1.chalk.yellowBright(`依赖预编译排除 @tarojs/runtime 依赖会导致应用实例错误, 已为您忽略该配置！`));
            }
            // plugin-platform 等插件的 runtime 文件入口
            const runtimePath = typeof this.config.runtimePath === 'string' ? [this.config.runtimePath] : this.config.runtimePath || [];
            yield this.setDeps(entries, include.concat(...runtimePath.map(item => item.replace(/^post:/, ''))), exclude);
            /** 使用 esbuild 对 node_modules 依赖进行 bundle */
            yield this.bundle();
            /** 把依赖的 bundle 产物打包成 Webpack Module Federation 格式 */
            yield this.buildLib();
            /** 项目 Host 配置 Module Federation */
            this.setHost(['', 'auto'].includes(publicPath) ? '' : publicPath.replace(/^\.(\/)?/, '/'));
            const script = this.chain.module.rule('script');
            Array.from(this.deps.keys()).map(dep => {
                /** node_modules 已预编译，不需要二次加载 (TODO: 修复 esbuild 加载 css 问题后，也应当移除对应规则对依赖的加载) */
                script.exclude.add(new RegExp(`node_modules[/\\\\]${dep.replace(/\//g, '\\/')}`));
            });
            // Proxy
            if (this.mode !== 'production' || this.config.devServer) {
                this.chain.devServer.merge({
                    static: [{
                            directory: this.remoteCacheDir,
                            publicPath,
                            watch: true,
                            staticOptions: {
                                immutable: true
                            }
                        }]
                });
            }
            yield _super.run.call(this);
        });
    }
}
exports.WebPrebundle = WebPrebundle;
//# sourceMappingURL=web.js.map