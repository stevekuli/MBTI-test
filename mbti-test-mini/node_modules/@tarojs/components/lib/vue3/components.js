import { defineComponent } from 'vue';
import { defineContainer } from './vue-component-lib/utils.js';
import { defineCustomElementTaroAdCore, defineCustomElementTaroAdCustomCore, defineCustomElementTaroAnimationVideoCore, defineCustomElementTaroAnimationViewCore, defineCustomElementTaroArCameraCore, defineCustomElementTaroAudioCore, defineCustomElementTaroAwemeDataCore, defineCustomElementTaroButtonCore, defineCustomElementTaroCameraCore, defineCustomElementTaroCanvasCore, defineCustomElementTaroChannelLiveCore, defineCustomElementTaroChannelVideoCore, defineCustomElementTaroCheckboxCore, defineCustomElementTaroCheckboxGroupCore, defineCustomElementTaroCommentDetailCore, defineCustomElementTaroCommentListCore, defineCustomElementTaroContactButtonCore, defineCustomElementTaroCoverImageCore, defineCustomElementTaroCoverViewCore, defineCustomElementTaroCustomWrapperCore, defineCustomElementTaroEditorCore, defineCustomElementTaroFollowSwanCore, defineCustomElementTaroFormCore, defineCustomElementTaroFunctionalPageNavigatorCore, defineCustomElementTaroGridViewCore, defineCustomElementTaroIconCore, defineCustomElementTaroImageCore, defineCustomElementTaroInlinePaymentPanelCore, defineCustomElementTaroInputCore, defineCustomElementTaroKeyboardAccessoryCore, defineCustomElementTaroLabelCore, defineCustomElementTaroLifestyleCore, defineCustomElementTaroLikeCore, defineCustomElementTaroListViewCore, defineCustomElementTaroLivePlayerCore, defineCustomElementTaroLivePusherCore, defineCustomElementTaroLoginCore, defineCustomElementTaroLottieCore, defineCustomElementTaroMapCore, defineCustomElementTaroMatchMediaCore, defineCustomElementTaroMovableAreaCore, defineCustomElementTaroMovableViewCore, defineCustomElementTaroNativeSlotCore, defineCustomElementTaroNavigationBarCore, defineCustomElementTaroNavigatorCore, defineCustomElementTaroOfficialAccountCore, defineCustomElementTaroOpenDataCore, defineCustomElementTaroPageContainerCore, defineCustomElementTaroPageMetaCore, defineCustomElementTaroPickerCore, defineCustomElementTaroPickerGroup, defineCustomElementTaroPickerViewColumnCore, defineCustomElementTaroPickerViewCore, defineCustomElementTaroProgressCore, defineCustomElementTaroPullToRefreshCore, defineCustomElementTaroRadioCore, defineCustomElementTaroRadioGroupCore, defineCustomElementTaroRichTextCore, defineCustomElementTaroRootPortalCore, defineCustomElementTaroRtcRoomCore, defineCustomElementTaroRtcRoomItemCore, defineCustomElementTaroScrollViewCore, defineCustomElementTaroShareElementCore, defineCustomElementTaroSliderCore, defineCustomElementTaroSlotCore, defineCustomElementTaroSnapshotCore, defineCustomElementTaroStickyHeaderCore, defineCustomElementTaroStickySectionCore, defineCustomElementTaroSwiperCore, defineCustomElementTaroSwiperItemCore, defineCustomElementTaroSwitchCore, defineCustomElementTaroTabItemCore, defineCustomElementTaroTabbar, defineCustomElementTaroTabsCore, defineCustomElementTaroTextCore, defineCustomElementTaroTextareaCore, defineCustomElementTaroVideoControl, defineCustomElementTaroVideoCore, defineCustomElementTaroVideoDanmu, defineCustomElementTaroViewCore, defineCustomElementTaroVoipRoomCore, defineCustomElementTaroWebViewCore } from '@tarojs/components/dist/components';

/* eslint-disable */
const Ad = /*@__PURE__*/ defineContainer('taro-ad-core', defineCustomElementTaroAdCore);
const AdCustom = /*@__PURE__*/ defineContainer('taro-ad-custom-core', defineCustomElementTaroAdCustomCore);
const AnimationVideo = /*@__PURE__*/ defineContainer('taro-animation-video-core', defineCustomElementTaroAnimationVideoCore);
const AnimationView = /*@__PURE__*/ defineContainer('taro-animation-view-core', defineCustomElementTaroAnimationViewCore);
const ArCamera = /*@__PURE__*/ defineContainer('taro-ar-camera-core', defineCustomElementTaroArCameraCore);
const Audio = /*@__PURE__*/ defineContainer('taro-audio-core', defineCustomElementTaroAudioCore, [
    'src',
    'controls',
    'autoplay',
    'loop',
    'muted',
    'nativeProps',
    'error',
    'play',
    'pause',
    'timeupdate',
    'ended'
]);
const AwemeData = /*@__PURE__*/ defineContainer('taro-aweme-data-core', defineCustomElementTaroAwemeDataCore);
const Block = defineComponent((__props, { slots }) => slots.default);
const Button = /*@__PURE__*/ defineContainer('taro-button-core', defineCustomElementTaroButtonCore, [
    'disabled',
    'hoverClass',
    'type',
    'hoverStartTime',
    'hoverStayTime',
    'size',
    'plain',
    'loading',
    'formType',
    'tarobuttonsubmit',
    'tarobuttonreset'
]);
const Camera = /*@__PURE__*/ defineContainer('taro-camera-core', defineCustomElementTaroCameraCore);
const Canvas = /*@__PURE__*/ defineContainer('taro-canvas-core', defineCustomElementTaroCanvasCore, [
    'canvasId',
    'height',
    'width',
    'nativeProps',
    'longtap'
]);
const ChannelLive = /*@__PURE__*/ defineContainer('taro-channel-live-core', defineCustomElementTaroChannelLiveCore);
const ChannelVideo = /*@__PURE__*/ defineContainer('taro-channel-video-core', defineCustomElementTaroChannelVideoCore);
const Checkbox = /*@__PURE__*/ defineContainer('taro-checkbox-core', defineCustomElementTaroCheckboxCore, [
    'name',
    'value',
    'color',
    'id',
    'checked',
    'disabled',
    'nativeProps',
    'checkboxchange'
]);
const CheckboxGroup = /*@__PURE__*/ defineContainer('taro-checkbox-group-core', defineCustomElementTaroCheckboxGroupCore, [
    'name',
    'change'
]);
const CommentDetail = /*@__PURE__*/ defineContainer('taro-comment-detail-core', defineCustomElementTaroCommentDetailCore);
const CommentList = /*@__PURE__*/ defineContainer('taro-comment-list-core', defineCustomElementTaroCommentListCore);
const ContactButton = /*@__PURE__*/ defineContainer('taro-contact-button-core', defineCustomElementTaroContactButtonCore);
const CoverImage = /*@__PURE__*/ defineContainer('taro-cover-image-core', defineCustomElementTaroCoverImageCore, [
    'src',
    'nativeProps',
    'load',
    'error'
]);
const CoverView = /*@__PURE__*/ defineContainer('taro-cover-view-core', defineCustomElementTaroCoverViewCore, [
    'animation',
    'hoverClass',
    'hoverStartTime',
    'hoverStayTime',
    'longpress'
]);
const CustomWrapper = /*@__PURE__*/ defineContainer('taro-custom-wrapper-core', defineCustomElementTaroCustomWrapperCore);
const Editor = /*@__PURE__*/ defineContainer('taro-editor-core', defineCustomElementTaroEditorCore);
const FollowSwan = /*@__PURE__*/ defineContainer('taro-follow-swan-core', defineCustomElementTaroFollowSwanCore);
const Form = /*@__PURE__*/ defineContainer('taro-form-core', defineCustomElementTaroFormCore, [
    'submit'
]);
const FunctionalPageNavigator = /*@__PURE__*/ defineContainer('taro-functional-page-navigator-core', defineCustomElementTaroFunctionalPageNavigatorCore);
const GridView = /*@__PURE__*/ defineContainer('taro-grid-view-core', defineCustomElementTaroGridViewCore);
const Icon = /*@__PURE__*/ defineContainer('taro-icon-core', defineCustomElementTaroIconCore, [
    'type',
    'size',
    'color'
]);
const Image = /*@__PURE__*/ defineContainer('taro-image-core', defineCustomElementTaroImageCore, [
    'src',
    'mode',
    'lazyLoad',
    'nativeProps',
    'load',
    'error'
]);
const InlinePaymentPanel = /*@__PURE__*/ defineContainer('taro-inline-payment-panel-core', defineCustomElementTaroInlinePaymentPanelCore);
const Input = /*@__PURE__*/ defineContainer('taro-input-core', defineCustomElementTaroInputCore, [
    'value',
    'type',
    'password',
    'placeholder',
    'disabled',
    'maxlength',
    'autoFocus',
    'confirmType',
    'name',
    'nativeProps',
    'input',
    'paste',
    'focus',
    'blur',
    'confirm',
    'change',
    'keydown'
], 'value', 'input');
const KeyboardAccessory = /*@__PURE__*/ defineContainer('taro-keyboard-accessory-core', defineCustomElementTaroKeyboardAccessoryCore);
const Label = /*@__PURE__*/ defineContainer('taro-label-core', defineCustomElementTaroLabelCore, [
    'for'
]);
const Lifestyle = /*@__PURE__*/ defineContainer('taro-lifestyle-core', defineCustomElementTaroLifestyleCore);
const Like = /*@__PURE__*/ defineContainer('taro-like-core', defineCustomElementTaroLikeCore);
const ListView = /*@__PURE__*/ defineContainer('taro-list-view-core', defineCustomElementTaroListViewCore);
const LivePlayer = /*@__PURE__*/ defineContainer('taro-live-player-core', defineCustomElementTaroLivePlayerCore);
const LivePusher = /*@__PURE__*/ defineContainer('taro-live-pusher-core', defineCustomElementTaroLivePusherCore);
const Login = /*@__PURE__*/ defineContainer('taro-login-core', defineCustomElementTaroLoginCore);
const Lottie = /*@__PURE__*/ defineContainer('taro-lottie-core', defineCustomElementTaroLottieCore);
const Map = /*@__PURE__*/ defineContainer('taro-map-core', defineCustomElementTaroMapCore);
const MatchMedia = /*@__PURE__*/ defineContainer('taro-match-media-core', defineCustomElementTaroMatchMediaCore);
const MovableArea = /*@__PURE__*/ defineContainer('taro-movable-area-core', defineCustomElementTaroMovableAreaCore, [
    'scaleArea'
]);
const MovableView = /*@__PURE__*/ defineContainer('taro-movable-view-core', defineCustomElementTaroMovableViewCore, [
    'x',
    'y',
    'direction',
    'outOfBounds',
    'inertia',
    'friction',
    'damping',
    'disabled',
    'scale',
    'scaleMin',
    'scaleMax',
    'scaleValue',
    'animation',
    'change',
    'scale',
    'htouchmove',
    'vtouchmove'
]);
const NativeSlot = /*@__PURE__*/ defineContainer('taro-native-slot-core', defineCustomElementTaroNativeSlotCore);
const NavigationBar = /*@__PURE__*/ defineContainer('taro-navigation-bar-core', defineCustomElementTaroNavigationBarCore);
const Navigator = /*@__PURE__*/ defineContainer('taro-navigator-core', defineCustomElementTaroNavigatorCore, [
    'hoverClass',
    'url',
    'openType',
    'isHover',
    'delta',
    'cuccess',
    'fail',
    'complete'
]);
const OfficialAccount = /*@__PURE__*/ defineContainer('taro-official-account-core', defineCustomElementTaroOfficialAccountCore);
const OpenData = /*@__PURE__*/ defineContainer('taro-open-data-core', defineCustomElementTaroOpenDataCore);
const PageContainer = /*@__PURE__*/ defineContainer('taro-page-container-core', defineCustomElementTaroPageContainerCore);
const PageMeta = /*@__PURE__*/ defineContainer('taro-page-meta-core', defineCustomElementTaroPageMetaCore);
const Picker = /*@__PURE__*/ defineContainer('taro-picker-core', defineCustomElementTaroPickerCore, [
    'mode',
    'disabled',
    'range',
    'rangeKey',
    'value',
    'start',
    'end',
    'fields',
    'name',
    'textProps',
    'change',
    'columnchange',
    'cancel'
], 'value', 'change');
const PickerGroup = /*@__PURE__*/ defineContainer('taro-picker-group', defineCustomElementTaroPickerGroup, [
    'mode',
    'range',
    'rangeKey',
    'height',
    'columnId',
    'updateHeight',
    'updateDay',
    'columnChange'
]);
const PickerViewColumn = /*@__PURE__*/ defineContainer('taro-picker-view-column-core', defineCustomElementTaroPickerViewColumnCore, [
    'col',
    'initialPosition',
    'paddingVertical',
    'onselect',
    'onselectstart',
    'onselectend'
]);
const PickerView = /*@__PURE__*/ defineContainer('taro-picker-view-core', defineCustomElementTaroPickerViewCore, [
    'indicatorStyle',
    'indicatorClass',
    'value',
    'maskStyle',
    'maskClass',
    'change',
    'pickstart',
    'pickend'
]);
const Progress = /*@__PURE__*/ defineContainer('taro-progress-core', defineCustomElementTaroProgressCore, [
    'percent',
    'showInfo',
    'borderRadius',
    'fontSize',
    'strokeWidth',
    'activeColor',
    'backgroundColor',
    'active'
]);
const PullToRefresh = /*@__PURE__*/ defineContainer('taro-pull-to-refresh-core', defineCustomElementTaroPullToRefreshCore, [
    'prefixCls',
    'distanceToRefresh',
    'damping',
    'indicator',
    'refresh'
]);
const Radio = /*@__PURE__*/ defineContainer('taro-radio-core', defineCustomElementTaroRadioCore, [
    'name',
    'value',
    'id',
    'checked',
    'disabled',
    'nativeProps',
    'radiochange'
]);
const RadioGroup = /*@__PURE__*/ defineContainer('taro-radio-group-core', defineCustomElementTaroRadioGroupCore, [
    'name',
    'change'
]);
const RichText = /*@__PURE__*/ defineContainer('taro-rich-text-core', defineCustomElementTaroRichTextCore, [
    'nodes',
    'selectable',
    'userSelect',
    'space'
]);
const RootPortal = /*@__PURE__*/ defineContainer('taro-root-portal-core', defineCustomElementTaroRootPortalCore);
const RtcRoom = /*@__PURE__*/ defineContainer('taro-rtc-room-core', defineCustomElementTaroRtcRoomCore);
const RtcRoomItem = /*@__PURE__*/ defineContainer('taro-rtc-room-item-core', defineCustomElementTaroRtcRoomItemCore);
const ScrollView = /*@__PURE__*/ defineContainer('taro-scroll-view-core', defineCustomElementTaroScrollViewCore, [
    'scrollX',
    'scrollY',
    'upperThreshold',
    'lowerThreshold',
    'mpScrollTop',
    'mpScrollLeft',
    'mpScrollIntoView',
    'mpScrollIntoViewAlignment',
    'animated',
    'scroll',
    'scrolltoupper',
    'scrolltolower'
]);
const ShareElement = /*@__PURE__*/ defineContainer('taro-share-element-core', defineCustomElementTaroShareElementCore);
const Slider = /*@__PURE__*/ defineContainer('taro-slider-core', defineCustomElementTaroSliderCore, [
    'min',
    'max',
    'step',
    'disabled',
    'value',
    'activeColor',
    'backgroundColor',
    'blockSize',
    'blockColor',
    'showValue',
    'name',
    'change',
    'changing'
], 'value', 'change');
const Slot = /*@__PURE__*/ defineContainer('taro-slot-core', defineCustomElementTaroSlotCore);
const Snapshot = /*@__PURE__*/ defineContainer('taro-snapshot-core', defineCustomElementTaroSnapshotCore);
const StickyHeader = /*@__PURE__*/ defineContainer('taro-sticky-header-core', defineCustomElementTaroStickyHeaderCore);
const StickySection = /*@__PURE__*/ defineContainer('taro-sticky-section-core', defineCustomElementTaroStickySectionCore);
const Swiper = /*@__PURE__*/ defineContainer('taro-swiper-core', defineCustomElementTaroSwiperCore, [
    'indicatorDots',
    'indicatorColor',
    'indicatorActiveColor',
    'autoplay',
    'current',
    'currentItemId',
    'interval',
    'duration',
    'circular',
    'vertical',
    'previousMargin',
    'nextMargin',
    'displayMultipleItems',
    'full',
    'zoom',
    'change',
    'animationfinish'
]);
const SwiperItem = /*@__PURE__*/ defineContainer('taro-swiper-item-core', defineCustomElementTaroSwiperItemCore, [
    'itemId',
    'deep'
]);
const Switch = /*@__PURE__*/ defineContainer('taro-switch-core', defineCustomElementTaroSwitchCore, [
    'type',
    'checked',
    'color',
    'name',
    'disabled',
    'nativeProps',
    'change'
], 'checked', 'change');
const TabItem = /*@__PURE__*/ defineContainer('taro-tab-item-core', defineCustomElementTaroTabItemCore);
const Tabbar = /*@__PURE__*/ defineContainer('taro-tabbar', defineCustomElementTaroTabbar, [
    'conf',
    'longpress'
]);
const Tabs = /*@__PURE__*/ defineContainer('taro-tabs-core', defineCustomElementTaroTabsCore);
const Text = /*@__PURE__*/ defineContainer('taro-text-core', defineCustomElementTaroTextCore, [
    'selectable',
    'userSelect',
    'space',
    'numberOfLines'
]);
const Textarea = /*@__PURE__*/ defineContainer('taro-textarea-core', defineCustomElementTaroTextareaCore, [
    'value',
    'placeholder',
    'disabled',
    'maxlength',
    'autoFocus',
    'autoHeight',
    'name',
    'nativeProps',
    'input',
    'focus',
    'blur',
    'confirm',
    'change',
    'linechange',
    'keydown'
], 'value', 'input');
const VideoControl = /*@__PURE__*/ defineContainer('taro-video-control', defineCustomElementTaroVideoControl, [
    'controls',
    'currentTime',
    'duration',
    'isPlaying',
    'pauseFunc',
    'playFunc',
    'seekFunc',
    'showPlayBtn',
    'showProgress'
]);
const Video = /*@__PURE__*/ defineContainer('taro-video-core', defineCustomElementTaroVideoCore, [
    'src',
    'duration',
    'controls',
    'autoplay',
    'loop',
    'muted',
    'initialTime',
    'poster',
    'objectFit',
    'showProgress',
    'showFullscreenBtn',
    'showPlayBtn',
    'showCenterPlayBtn',
    'showMuteBtn',
    'danmuList',
    'danmuBtn',
    'enableDanmu',
    'enablePlayGesture',
    'enableProgressGesture',
    'vslideGesture',
    'vslideGestureInFullscreen',
    'nativeProps',
    'play',
    'pause',
    'ended',
    'timeupdate',
    'error',
    'fullscreenchange',
    'progress',
    'loadedmetadata'
]);
const VideoDanmu = /*@__PURE__*/ defineContainer('taro-video-danmu', defineCustomElementTaroVideoDanmu, [
    'enable'
]);
const View = /*@__PURE__*/ defineContainer('taro-view-core', defineCustomElementTaroViewCore, [
    'animation',
    'hoverClass',
    'hoverStartTime',
    'hoverStayTime',
    'longpress'
]);
const VoipRoom = /*@__PURE__*/ defineContainer('taro-voip-room-core', defineCustomElementTaroVoipRoomCore);
const WebView = /*@__PURE__*/ defineContainer('taro-web-view-core', defineCustomElementTaroWebViewCore, [
    'src',
    'load',
    'error'
]);

export { Ad, AdCustom, AnimationVideo, AnimationView, ArCamera, Audio, AwemeData, Block, Button, Camera, Canvas, ChannelLive, ChannelVideo, Checkbox, CheckboxGroup, CommentDetail, CommentList, ContactButton, CoverImage, CoverView, CustomWrapper, Editor, FollowSwan, Form, FunctionalPageNavigator, GridView, Icon, Image, InlinePaymentPanel, Input, KeyboardAccessory, Label, Lifestyle, Like, ListView, LivePlayer, LivePusher, Login, Lottie, Map, MatchMedia, MovableArea, MovableView, NativeSlot, NavigationBar, Navigator, OfficialAccount, OpenData, PageContainer, PageMeta, Picker, PickerGroup, PickerView, PickerViewColumn, Progress, PullToRefresh, Radio, RadioGroup, RichText, RootPortal, RtcRoom, RtcRoomItem, ScrollView, ShareElement, Slider, Slot, Snapshot, StickyHeader, StickySection, Swiper, SwiperItem, Switch, TabItem, Tabbar, Tabs, Text, Textarea, Video, VideoControl, VideoDanmu, View, VoipRoom, WebView };
//# sourceMappingURL=components.js.map
