import Vue from 'vue';
import { createCommonRender, createCommonMethod } from './vue-component-lib/utils.js';
import { defineCustomElementTaroAdCore, defineCustomElementTaroAdCustomCore, defineCustomElementTaroAnimationVideoCore, defineCustomElementTaroAnimationViewCore, defineCustomElementTaroArCameraCore, defineCustomElementTaroAudioCore, defineCustomElementTaroAwemeDataCore, defineCustomElementTaroBlockCore, defineCustomElementTaroButtonCore, defineCustomElementTaroCameraCore, defineCustomElementTaroCanvasCore, defineCustomElementTaroChannelLiveCore, defineCustomElementTaroChannelVideoCore, defineCustomElementTaroCheckboxCore, defineCustomElementTaroCheckboxGroupCore, defineCustomElementTaroCommentDetailCore, defineCustomElementTaroCommentListCore, defineCustomElementTaroContactButtonCore, defineCustomElementTaroCoverImageCore, defineCustomElementTaroCoverViewCore, defineCustomElementTaroCustomWrapperCore, defineCustomElementTaroEditorCore, defineCustomElementTaroFollowSwanCore, defineCustomElementTaroFormCore, defineCustomElementTaroFunctionalPageNavigatorCore, defineCustomElementTaroGridViewCore, defineCustomElementTaroIconCore, defineCustomElementTaroImageCore, defineCustomElementTaroInlinePaymentPanelCore, defineCustomElementTaroInputCore, defineCustomElementTaroKeyboardAccessoryCore, defineCustomElementTaroLabelCore, defineCustomElementTaroLifestyleCore, defineCustomElementTaroLikeCore, defineCustomElementTaroListViewCore, defineCustomElementTaroLivePlayerCore, defineCustomElementTaroLivePusherCore, defineCustomElementTaroLoginCore, defineCustomElementTaroLottieCore, defineCustomElementTaroMapCore, defineCustomElementTaroMatchMediaCore, defineCustomElementTaroMovableAreaCore, defineCustomElementTaroMovableViewCore, defineCustomElementTaroNativeSlotCore, defineCustomElementTaroNavigationBarCore, defineCustomElementTaroNavigatorCore, defineCustomElementTaroOfficialAccountCore, defineCustomElementTaroOpenDataCore, defineCustomElementTaroPageContainerCore, defineCustomElementTaroPageMetaCore, defineCustomElementTaroPickerCore, defineCustomElementTaroPickerGroup, defineCustomElementTaroPickerViewColumnCore, defineCustomElementTaroPickerViewCore, defineCustomElementTaroProgressCore, defineCustomElementTaroPullToRefreshCore, defineCustomElementTaroRadioCore, defineCustomElementTaroRadioGroupCore, defineCustomElementTaroRichTextCore, defineCustomElementTaroRootPortalCore, defineCustomElementTaroRtcRoomCore, defineCustomElementTaroRtcRoomItemCore, defineCustomElementTaroScrollViewCore, defineCustomElementTaroShareElementCore, defineCustomElementTaroSliderCore, defineCustomElementTaroSlotCore, defineCustomElementTaroSnapshotCore, defineCustomElementTaroStickyHeaderCore, defineCustomElementTaroStickySectionCore, defineCustomElementTaroSwiperCore, defineCustomElementTaroSwiperItemCore, defineCustomElementTaroSwitchCore, defineCustomElementTaroTabItemCore, defineCustomElementTaroTabbar, defineCustomElementTaroTabsCore, defineCustomElementTaroTextCore, defineCustomElementTaroTextareaCore, defineCustomElementTaroVideoControl, defineCustomElementTaroVideoCore, defineCustomElementTaroVideoDanmu, defineCustomElementTaroViewCore, defineCustomElementTaroVoipRoomCore, defineCustomElementTaroWebViewCore } from '@tarojs/components/dist/components';

/* eslint-disable */
const Ad = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-ad-core', [], defineCustomElementTaroAdCore),
});
const AdCustom = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-ad-custom-core', [], defineCustomElementTaroAdCustomCore),
});
const AnimationVideo = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-animation-video-core', [], defineCustomElementTaroAnimationVideoCore),
});
const AnimationView = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-animation-view-core', [], defineCustomElementTaroAnimationViewCore),
});
const ArCamera = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-ar-camera-core', [], defineCustomElementTaroArCameraCore),
});
const Audio = /*@__PURE__*/ Vue.extend({
    props: {
        src: {},
        controls: {},
        autoplay: {},
        loop: {},
        muted: {},
        nativeProps: {}
    },
    render: createCommonRender('taro-audio-core', ['error', 'play', 'pause', 'timeupdate', 'ended'], defineCustomElementTaroAudioCore),
});
const AwemeData = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-aweme-data-core', [], defineCustomElementTaroAwemeDataCore),
});
const Block = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('fragment', [], defineCustomElementTaroBlockCore),
});
const Button = /*@__PURE__*/ Vue.extend({
    props: {
        disabled: {},
        hoverClass: {},
        type: {},
        hoverStartTime: {},
        hoverStayTime: {},
        size: {},
        plain: {},
        loading: {},
        formType: {}
    },
    render: createCommonRender('taro-button-core', ['tarobuttonsubmit', 'tarobuttonreset'], defineCustomElementTaroButtonCore),
});
const Camera = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-camera-core', [], defineCustomElementTaroCameraCore),
});
const Canvas = /*@__PURE__*/ Vue.extend({
    props: {
        canvasId: {},
        height: {},
        width: {},
        nativeProps: {}
    },
    render: createCommonRender('taro-canvas-core', ['longtap'], defineCustomElementTaroCanvasCore),
});
const ChannelLive = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-channel-live-core', [], defineCustomElementTaroChannelLiveCore),
});
const ChannelVideo = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-channel-video-core', [], defineCustomElementTaroChannelVideoCore),
});
const Checkbox = /*@__PURE__*/ Vue.extend({
    props: {
        name: {},
        value: {},
        color: {},
        id: {},
        checked: {},
        disabled: {},
        nativeProps: {}
    },
    render: createCommonRender('taro-checkbox-core', ['checkboxchange'], defineCustomElementTaroCheckboxCore),
});
const CheckboxGroup = /*@__PURE__*/ Vue.extend({
    props: {
        name: {}
    },
    render: createCommonRender('taro-checkbox-group-core', ['change'], defineCustomElementTaroCheckboxGroupCore),
});
const CommentDetail = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-comment-detail-core', [], defineCustomElementTaroCommentDetailCore),
});
const CommentList = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-comment-list-core', [], defineCustomElementTaroCommentListCore),
});
const ContactButton = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-contact-button-core', [], defineCustomElementTaroContactButtonCore),
});
const CoverImage = /*@__PURE__*/ Vue.extend({
    props: {
        src: {},
        nativeProps: {}
    },
    render: createCommonRender('taro-cover-image-core', ['load', 'error'], defineCustomElementTaroCoverImageCore),
});
const CoverView = /*@__PURE__*/ Vue.extend({
    props: {
        animation: {},
        hoverClass: {},
        hoverStartTime: {},
        hoverStayTime: {}
    },
    render: createCommonRender('taro-cover-view-core', ['longpress'], defineCustomElementTaroCoverViewCore),
});
const CustomWrapper = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-custom-wrapper-core', [], defineCustomElementTaroCustomWrapperCore),
});
const Editor = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-editor-core', [], defineCustomElementTaroEditorCore),
});
const FollowSwan = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-follow-swan-core', [], defineCustomElementTaroFollowSwanCore),
});
const Form = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-form-core', ['submit'], defineCustomElementTaroFormCore),
});
const FunctionalPageNavigator = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-functional-page-navigator-core', [], defineCustomElementTaroFunctionalPageNavigatorCore),
});
const GridView = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-grid-view-core', [], defineCustomElementTaroGridViewCore),
});
const Icon = /*@__PURE__*/ Vue.extend({
    props: {
        type: {},
        size: {},
        color: {}
    },
    render: createCommonRender('taro-icon-core', [], defineCustomElementTaroIconCore),
});
const Image = /*@__PURE__*/ Vue.extend({
    props: {
        src: {},
        mode: {},
        lazyLoad: {},
        nativeProps: {}
    },
    render: createCommonRender('taro-image-core', ['load', 'error'], defineCustomElementTaroImageCore),
});
const InlinePaymentPanel = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-inline-payment-panel-core', [], defineCustomElementTaroInlinePaymentPanelCore),
});
const Input = /*@__PURE__*/ Vue.extend({
    props: {
        value: {},
        type: {},
        password: {},
        placeholder: {},
        disabled: {},
        maxlength: {},
        autoFocus: {},
        confirmType: {},
        name: {},
        nativeProps: {}
    },
    model: { prop: 'value', event: 'update:modelValue' },
    methods: {
        focus: createCommonMethod('focus')
    },
    render: createCommonRender('taro-input-core', ['input', 'paste', 'focus', 'blur', 'confirm', 'change', 'keydown'], defineCustomElementTaroInputCore),
});
const KeyboardAccessory = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-keyboard-accessory-core', [], defineCustomElementTaroKeyboardAccessoryCore),
});
const Label = /*@__PURE__*/ Vue.extend({
    props: {
        for: {}
    },
    render: createCommonRender('taro-label-core', [], defineCustomElementTaroLabelCore),
});
const Lifestyle = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-lifestyle-core', [], defineCustomElementTaroLifestyleCore),
});
const Like = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-like-core', [], defineCustomElementTaroLikeCore),
});
const ListView = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-list-view-core', [], defineCustomElementTaroListViewCore),
});
const LivePlayer = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-live-player-core', [], defineCustomElementTaroLivePlayerCore),
});
const LivePusher = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-live-pusher-core', [], defineCustomElementTaroLivePusherCore),
});
const Login = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-login-core', [], defineCustomElementTaroLoginCore),
});
const Lottie = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-lottie-core', [], defineCustomElementTaroLottieCore),
});
const Map = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-map-core', [], defineCustomElementTaroMapCore),
});
const MatchMedia = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-match-media-core', [], defineCustomElementTaroMatchMediaCore),
});
const MovableArea = /*@__PURE__*/ Vue.extend({
    props: {
        scaleArea: {}
    },
    render: createCommonRender('taro-movable-area-core', [], defineCustomElementTaroMovableAreaCore),
});
const MovableView = /*@__PURE__*/ Vue.extend({
    props: {
        x: {},
        y: {},
        direction: {},
        outOfBounds: {},
        inertia: {},
        friction: {},
        damping: {},
        disabled: {},
        scale: {},
        scaleMin: {},
        scaleMax: {},
        scaleValue: {},
        animation: {}
    },
    methods: {
        setParent: createCommonMethod('setParent'),
        endScale: createCommonMethod('endScale'),
        setScale: createCommonMethod('setScale')
    },
    render: createCommonRender('taro-movable-view-core', ['change', 'scale', 'htouchmove', 'vtouchmove'], defineCustomElementTaroMovableViewCore),
});
const NativeSlot = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-native-slot-core', [], defineCustomElementTaroNativeSlotCore),
});
const NavigationBar = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-navigation-bar-core', [], defineCustomElementTaroNavigationBarCore),
});
const Navigator = /*@__PURE__*/ Vue.extend({
    props: {
        hoverClass: {},
        url: {},
        openType: {},
        isHover: {},
        delta: {}
    },
    render: createCommonRender('taro-navigator-core', ['cuccess', 'fail', 'complete'], defineCustomElementTaroNavigatorCore),
});
const OfficialAccount = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-official-account-core', [], defineCustomElementTaroOfficialAccountCore),
});
const OpenData = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-open-data-core', [], defineCustomElementTaroOpenDataCore),
});
const PageContainer = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-page-container-core', [], defineCustomElementTaroPageContainerCore),
});
const PageMeta = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-page-meta-core', [], defineCustomElementTaroPageMetaCore),
});
const Picker = /*@__PURE__*/ Vue.extend({
    props: {
        mode: {},
        disabled: {},
        range: {},
        rangeKey: {},
        value: {},
        start: {},
        end: {},
        fields: {},
        name: {},
        textProps: {}
    },
    model: { prop: 'value', event: 'update:modelValue' },
    render: createCommonRender('taro-picker-core', ['change', 'columnchange', 'cancel'], defineCustomElementTaroPickerCore),
});
const PickerGroup = /*@__PURE__*/ Vue.extend({
    props: {
        mode: {},
        range: {},
        rangeKey: {},
        height: {},
        columnId: {},
        updateHeight: {},
        updateDay: {}
    },
    methods: {
        handleMoveStart: createCommonMethod('handleMoveStart'),
        handleMoving: createCommonMethod('handleMoving'),
        handleMoveEnd: createCommonMethod('handleMoveEnd')
    },
    render: createCommonRender('taro-picker-group', ['columnChange'], defineCustomElementTaroPickerGroup),
});
const PickerViewColumn = /*@__PURE__*/ Vue.extend({
    props: {
        col: {},
        initialPosition: {},
        paddingVertical: {}
    },
    render: createCommonRender('taro-picker-view-column-core', ['onselect', 'onselectstart', 'onselectend'], defineCustomElementTaroPickerViewColumnCore),
});
const PickerView = /*@__PURE__*/ Vue.extend({
    props: {
        indicatorStyle: {},
        indicatorClass: {},
        value: {},
        maskStyle: {},
        maskClass: {}
    },
    render: createCommonRender('taro-picker-view-core', ['change', 'pickstart', 'pickend'], defineCustomElementTaroPickerViewCore),
});
const Progress = /*@__PURE__*/ Vue.extend({
    props: {
        percent: {},
        showInfo: {},
        borderRadius: {},
        fontSize: {},
        strokeWidth: {},
        activeColor: {},
        backgroundColor: {},
        active: {}
    },
    render: createCommonRender('taro-progress-core', [], defineCustomElementTaroProgressCore),
});
const PullToRefresh = /*@__PURE__*/ Vue.extend({
    props: {
        prefixCls: {},
        distanceToRefresh: {},
        damping: {},
        indicator: {}
    },
    render: createCommonRender('taro-pull-to-refresh-core', ['refresh'], defineCustomElementTaroPullToRefreshCore),
});
const Radio = /*@__PURE__*/ Vue.extend({
    props: {
        name: {},
        value: {},
        id: {},
        checked: {},
        disabled: {},
        nativeProps: {}
    },
    render: createCommonRender('taro-radio-core', ['radiochange'], defineCustomElementTaroRadioCore),
});
const RadioGroup = /*@__PURE__*/ Vue.extend({
    props: {
        name: {}
    },
    render: createCommonRender('taro-radio-group-core', ['change'], defineCustomElementTaroRadioGroupCore),
});
const RichText = /*@__PURE__*/ Vue.extend({
    props: {
        nodes: {},
        selectable: {},
        userSelect: {},
        space: {}
    },
    render: createCommonRender('taro-rich-text-core', [], defineCustomElementTaroRichTextCore),
});
const RootPortal = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-root-portal-core', [], defineCustomElementTaroRootPortalCore),
});
const RtcRoom = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-rtc-room-core', [], defineCustomElementTaroRtcRoomCore),
});
const RtcRoomItem = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-rtc-room-item-core', [], defineCustomElementTaroRtcRoomItemCore),
});
const ScrollView = /*@__PURE__*/ Vue.extend({
    props: {
        scrollX: {},
        scrollY: {},
        upperThreshold: {},
        lowerThreshold: {},
        mpScrollTop: {},
        mpScrollLeft: {},
        mpScrollIntoView: {},
        mpScrollIntoViewAlignment: {},
        animated: {}
    },
    methods: {
        mpScrollToMethod: createCommonMethod('mpScrollToMethod'),
        mpScrollIntoViewMethod: createCommonMethod('mpScrollIntoViewMethod')
    },
    render: createCommonRender('taro-scroll-view-core', ['scroll', 'scrolltoupper', 'scrolltolower'], defineCustomElementTaroScrollViewCore),
});
const ShareElement = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-share-element-core', [], defineCustomElementTaroShareElementCore),
});
const Slider = /*@__PURE__*/ Vue.extend({
    props: {
        min: {},
        max: {},
        step: {},
        disabled: {},
        value: {},
        activeColor: {},
        backgroundColor: {},
        blockSize: {},
        blockColor: {},
        showValue: {},
        name: {}
    },
    model: { prop: 'value', event: 'update:modelValue' },
    render: createCommonRender('taro-slider-core', ['change', 'changing'], defineCustomElementTaroSliderCore),
});
const Slot = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-slot-core', [], defineCustomElementTaroSlotCore),
});
const Snapshot = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-snapshot-core', [], defineCustomElementTaroSnapshotCore),
});
const StickyHeader = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-sticky-header-core', [], defineCustomElementTaroStickyHeaderCore),
});
const StickySection = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-sticky-section-core', [], defineCustomElementTaroStickySectionCore),
});
const Swiper = /*@__PURE__*/ Vue.extend({
    props: {
        indicatorDots: {},
        indicatorColor: {},
        indicatorActiveColor: {},
        autoplay: {},
        current: {},
        currentItemId: {},
        interval: {},
        duration: {},
        circular: {},
        vertical: {},
        previousMargin: {},
        nextMargin: {},
        displayMultipleItems: {},
        full: {},
        zoom: {}
    },
    render: createCommonRender('taro-swiper-core', ['change', 'animationfinish'], defineCustomElementTaroSwiperCore),
});
const SwiperItem = /*@__PURE__*/ Vue.extend({
    props: {
        itemId: {},
        deep: {}
    },
    render: createCommonRender('taro-swiper-item-core', [], defineCustomElementTaroSwiperItemCore),
});
const Switch = /*@__PURE__*/ Vue.extend({
    props: {
        type: {},
        checked: {},
        color: {},
        name: {},
        disabled: {},
        nativeProps: {}
    },
    model: { prop: 'checked', event: 'update:modelValue' },
    render: createCommonRender('taro-switch-core', ['change'], defineCustomElementTaroSwitchCore),
});
const TabItem = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-tab-item-core', [], defineCustomElementTaroTabItemCore),
});
const Tabbar = /*@__PURE__*/ Vue.extend({
    props: {
        conf: {}
    },
    render: createCommonRender('taro-tabbar', ['longpress'], defineCustomElementTaroTabbar),
});
const Tabs = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-tabs-core', [], defineCustomElementTaroTabsCore),
});
const Text = /*@__PURE__*/ Vue.extend({
    props: {
        selectable: {},
        userSelect: {},
        space: {},
        numberOfLines: {}
    },
    render: createCommonRender('taro-text-core', [], defineCustomElementTaroTextCore),
});
const Textarea = /*@__PURE__*/ Vue.extend({
    props: {
        value: {},
        placeholder: {},
        disabled: {},
        maxlength: {},
        autoFocus: {},
        autoHeight: {},
        name: {},
        nativeProps: {}
    },
    model: { prop: 'value', event: 'update:modelValue' },
    methods: {
        focus: createCommonMethod('focus')
    },
    render: createCommonRender('taro-textarea-core', ['input', 'focus', 'blur', 'confirm', 'change', 'linechange', 'keydown'], defineCustomElementTaroTextareaCore),
});
const VideoControl = /*@__PURE__*/ Vue.extend({
    props: {
        controls: {},
        currentTime: {},
        duration: {},
        isPlaying: {},
        pauseFunc: {},
        playFunc: {},
        seekFunc: {},
        showPlayBtn: {},
        showProgress: {}
    },
    methods: {
        setProgressBall: createCommonMethod('setProgressBall'),
        toggleVisibility: createCommonMethod('toggleVisibility'),
        getIsDraggingProgressBall: createCommonMethod('getIsDraggingProgressBall'),
        setCurrentTime: createCommonMethod('setCurrentTime')
    },
    render: createCommonRender('taro-video-control', [], defineCustomElementTaroVideoControl),
});
const Video = /*@__PURE__*/ Vue.extend({
    props: {
        src: {},
        duration: {},
        controls: {},
        autoplay: {},
        loop: {},
        muted: {},
        initialTime: {},
        poster: {},
        objectFit: {},
        showProgress: {},
        showFullscreenBtn: {},
        showPlayBtn: {},
        showCenterPlayBtn: {},
        showMuteBtn: {},
        danmuList: {},
        danmuBtn: {},
        enableDanmu: {},
        enablePlayGesture: {},
        enableProgressGesture: {},
        vslideGesture: {},
        vslideGestureInFullscreen: {},
        nativeProps: {}
    },
    methods: {
        getHlsObject: createCommonMethod('getHlsObject'),
        play: createCommonMethod('play'),
        pause: createCommonMethod('pause'),
        stop: createCommonMethod('stop'),
        seek: createCommonMethod('seek'),
        requestFullScreen: createCommonMethod('requestFullScreen'),
        exitFullScreen: createCommonMethod('exitFullScreen')
    },
    render: createCommonRender('taro-video-core', ['play', 'pause', 'ended', 'timeupdate', 'error', 'fullscreenchange', 'progress', 'loadedmetadata'], defineCustomElementTaroVideoCore),
});
const VideoDanmu = /*@__PURE__*/ Vue.extend({
    props: {
        enable: {}
    },
    methods: {
        sendDanmu: createCommonMethod('sendDanmu'),
        tick: createCommonMethod('tick')
    },
    render: createCommonRender('taro-video-danmu', [], defineCustomElementTaroVideoDanmu),
});
const View = /*@__PURE__*/ Vue.extend({
    props: {
        animation: {},
        hoverClass: {},
        hoverStartTime: {},
        hoverStayTime: {}
    },
    render: createCommonRender('taro-view-core', ['longpress'], defineCustomElementTaroViewCore),
});
const VoipRoom = /*@__PURE__*/ Vue.extend({
    render: createCommonRender('taro-voip-room-core', [], defineCustomElementTaroVoipRoomCore),
});
const WebView = /*@__PURE__*/ Vue.extend({
    props: {
        src: {}
    },
    render: createCommonRender('taro-web-view-core', ['load', 'error'], defineCustomElementTaroWebViewCore),
});

export { Ad, AdCustom, AnimationVideo, AnimationView, ArCamera, Audio, AwemeData, Block, Button, Camera, Canvas, ChannelLive, ChannelVideo, Checkbox, CheckboxGroup, CommentDetail, CommentList, ContactButton, CoverImage, CoverView, CustomWrapper, Editor, FollowSwan, Form, FunctionalPageNavigator, GridView, Icon, Image, InlinePaymentPanel, Input, KeyboardAccessory, Label, Lifestyle, Like, ListView, LivePlayer, LivePusher, Login, Lottie, Map, MatchMedia, MovableArea, MovableView, NativeSlot, NavigationBar, Navigator, OfficialAccount, OpenData, PageContainer, PageMeta, Picker, PickerGroup, PickerView, PickerViewColumn, Progress, PullToRefresh, Radio, RadioGroup, RichText, RootPortal, RtcRoom, RtcRoomItem, ScrollView, ShareElement, Slider, Slot, Snapshot, StickyHeader, StickySection, Swiper, SwiperItem, Switch, TabItem, Tabbar, Tabs, Text, Textarea, Video, VideoControl, VideoDanmu, View, VoipRoom, WebView };
//# sourceMappingURL=components.js.map
