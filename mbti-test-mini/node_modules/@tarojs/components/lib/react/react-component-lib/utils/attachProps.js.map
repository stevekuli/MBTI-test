{"version":3,"file":"attachProps.js","sources":["../../../../../taro-components-library-react/src/react-component-lib/utils/attachProps.ts"],"sourcesContent":["/**\n * Modify from https://github.com/ionic-team/stencil-ds-output-targets/blob/main/packages/react-output-target/react-component-lib/utils/attachProps.ts\n * MIT License https://github.com/ionic-team/stencil-ds-output-targets/blob/main/LICENSE\n */\nimport { flushSync, unstable_batchedUpdates } from 'react-dom'\n\nimport { camelToDashCase } from './case'\n\nconst arrayToMap = (arr: string[] | DOMTokenList) => {\n  const map = new Map<string, string>();\n  (arr as string[]).forEach((s: string) => map.set(s, s))\n  return map\n}\n\nexport const getClassName = (classList: DOMTokenList, newProps: any, oldProps: any) => {\n  const newClassProp: string = newProps.className || newProps.class\n  const oldClassProp: string = oldProps.className || oldProps.class\n  // map the classes to Maps for performance\n  const currentClasses = arrayToMap(classList)\n  const incomingPropClasses = arrayToMap(newClassProp ? newClassProp.split(' ') : [])\n  const oldPropClasses = arrayToMap(oldClassProp ? oldClassProp.split(' ') : [])\n  const finalClassNames: string[] = []\n  // loop through each of the current classes on the component\n  // to see if it should be a part of the classNames added\n  currentClasses.forEach((currentClass) => {\n    if (incomingPropClasses.has(currentClass)) {\n      // add it as its already included in classnames coming in from newProps\n      finalClassNames.push(currentClass)\n      incomingPropClasses.delete(currentClass)\n    } else if (!oldPropClasses.has(currentClass)) {\n      // add it as it has NOT been removed by user\n      finalClassNames.push(currentClass)\n    }\n  })\n  incomingPropClasses.forEach((s) => finalClassNames.push(s))\n  return finalClassNames.join(' ')\n}\n\n// Note(taro): 禁用 react 合成事件抛出 (避免自定义事件属性调用问题, 例如: event.detail.value 等)\nexport const isCoveredByReact = (__eventNameSuffix: string) => false\n\ninterface EventCenter {\n  [key: string]: EventCenter.EventCallback | undefined\n}\n\nnamespace EventCenter {\n  export interface EventCallback {\n    (e: Event): any\n    fn?: (e: Event) => any\n  }\n}\n\ntype HTMLElementWithEvents = HTMLElement & { __events?: EventCenter }\n\nfunction getComponentName (node: HTMLElement): string {\n  return node.tagName.replace(/^TARO-/, '').replace(/-CORE$/, '')\n}\n\nfunction getControlledValue (node: HTMLElement): string | null {\n  const componentName = getComponentName(node)\n  if (['INPUT', 'TEXTAREA', 'SLIDER', 'PICKER'].includes(componentName)) {\n    return 'value'\n  } else if (componentName === 'SWITCH') {\n    // Radio、Checkbox 受 RadioGroup、CheckboxGroup 控制，不支持受控\n    return 'checked'\n  } else {\n    return null\n  }\n}\n\nfunction getPropsAfterReactUpdate (node: HTMLElement): Record<string, any> | null {\n  const key = Object.keys(node).find(key => key.includes('__reactProps'))\n  if (key) {\n    return node[key] as Record<string, any>\n  } else {\n    return null\n  }\n}\n\nfunction finishedEventHandler (node: HTMLElement) {\n  const controlledValue = getControlledValue(node)\n\n  // 不是可以受控的表单组件，直接返回\n  if (!controlledValue) return\n\n  // 立即执行事件回调中用户可能触发了的 React 更新\n  flushSync(() => {})\n\n  // 组件在 React 更新后的 React props\n  const newProps = getPropsAfterReactUpdate(node)\n  if (newProps?.hasOwnProperty(controlledValue) && newProps[controlledValue] !== node[controlledValue]) {\n    // 如果 React Props 的 value 和 DOM 上的 value 不一致，以 React Props 为准（受控）\n    node[controlledValue] = newProps[controlledValue]\n    node.setAttribute(controlledValue, newProps[controlledValue])\n  }\n}\n\nexport const syncEvent = (\n  node: HTMLElementWithEvents,\n  eventName: string,\n  newEventHandler?: (e: Event) => any\n) => {\n  const eventStore = node.__events ||= {}\n  const oldEventHandler = eventStore[eventName]\n\n  if (!newEventHandler && oldEventHandler) {\n    node.removeEventListener(eventName, oldEventHandler)\n  } else {\n    if (oldEventHandler) {\n      if (oldEventHandler.fn === newEventHandler) {\n        return\n      } else {\n        // 删除旧的，绑定新的\n        node.removeEventListener(eventName, oldEventHandler)\n      }\n    }\n\n    const listener: EventCenter.EventCallback = eventStore[eventName] = function (e: Event) {\n      // React batch event updates\n      unstable_batchedUpdates(() => newEventHandler.call(this, e))\n      // 控制是否更新受控组件的 value 值\n      finishedEventHandler(node)\n    }\n    listener.fn = newEventHandler\n    node.addEventListener(\n      eventName,\n      listener\n    )\n  }\n}\n\n// TODO(performace): ReactComponent 已更新了一次，这里手动更新可能存在重复设置属性的问题\nexport const attachProps = (node: HTMLElementWithEvents, newProps: any, oldProps: any = {}) => {\n  // some test frameworks don't render DOM elements, so we test here to make sure we are dealing with DOM first\n  if (node instanceof Element) {\n    Object.keys(oldProps).forEach((name) => {\n      if (['style', 'children', 'ref', 'class', 'className', 'forwardedRef'].includes(name)) {\n        return\n      }\n      // Note: 移除节点上冗余事件、属性\n      if (!newProps.hasOwnProperty(name)) {\n        if (/^on([A-Z].*)/.test(name)) {\n          const eventName = name.substring(2)\n          const eventNameLc = eventName.toLowerCase()\n\n          if (!isCoveredByReact(eventNameLc)) {\n            syncEvent(node, eventNameLc)\n          }\n        } else {\n          (node as any)[name] = null\n          node.removeAttribute(camelToDashCase(name))\n        }\n      }\n    })\n    // add any classes in className to the class list\n    node.className = getClassName(node.classList, newProps, oldProps)\n\n    Object.keys(newProps).forEach((name) => {\n      /** Note(taro): 优化 style 属性的处理\n       * 1. 考虑到兼容旧版本项目，支持使用字符串配置 style 属性，但这并非推荐写法，且不考虑优化在 style 移除时同步删除属性\n       * 2. style 属性应当交与前端 UI 框架自行处理，不考虑实现类似于 reactify-wc 的更新策略\n       */\n      if ((name === 'style' && typeof newProps[name] !== 'string') || ['children', 'ref', 'class', 'className', 'forwardedRef'].includes(name)) {\n        return\n      }\n      if (/^on([A-Z].*)/.test(name)) {\n        const eventName = name.substring(2)\n        const eventNameLc = eventName.toLowerCase()\n\n        if (!isCoveredByReact(eventNameLc)) {\n          syncEvent(node, eventNameLc, newProps[name])\n        }\n      } else {\n        (node as any)[name] = newProps[name]\n        const propType = typeof newProps[name]\n        if (propType === 'string') {\n          node.setAttribute(camelToDashCase(name), newProps[name])\n        }\n      }\n    })\n\n    // 保证受控组件会被默认绑定一个空事件，用于触发 finishedEventHandler 中的受控逻辑\n    const controlledValue = getControlledValue(node)\n    if (\n      controlledValue &&\n      newProps.hasOwnProperty(controlledValue)\n    ) {\n      const handleChangeEvent = ['INPUT', 'TEXTAREA'].includes(getComponentName(node)) ? 'input' : 'change'\n      node.__events ||= {}\n      if (!node.__events.hasOwnProperty(handleChangeEvent)) {\n        syncEvent(node, handleChangeEvent, function () {})\n      }\n    }\n  }\n}\n\nexport function applyUnControlledDefaultValue (node: HTMLElementWithEvents, props: any) {\n  const controlledValue = getControlledValue(node)\n\n  // 不是可以受控的表单组件，直接返回\n  if (!controlledValue) return\n\n  const defaultValueName = 'default' + controlledValue.charAt(0).toUpperCase() + controlledValue.slice(1)\n  if (!props.hasOwnProperty(controlledValue) && props.hasOwnProperty(defaultValueName)) {\n    // 如果是可以受控的表单组件，当没有传入 value/checked 而是传入 defaultValue/defaultChecked 时，把表单值初始化为 defaultValue/defaultChecked\n    node[controlledValue] = props[defaultValueName]\n    node.setAttribute(controlledValue, props[defaultValueName])\n  }\n}\n"],"names":[],"mappings":"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"}