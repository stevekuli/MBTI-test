import React, { useCallback, } from 'react';
import View from '../View';
import { omit } from '../../utils';
let navigateTo, navigateBack, redirectTo, switchTab, reLaunch;
try {
    // eslint-disable-next-line @typescript-eslint/no-var-requires
    const routerObj = require('@tarojs/router-rn');
    navigateTo = routerObj === null || routerObj === void 0 ? void 0 : routerObj.navigateTo;
    navigateBack = routerObj === null || routerObj === void 0 ? void 0 : routerObj.navigateBack;
    redirectTo = routerObj === null || routerObj === void 0 ? void 0 : routerObj.redirectTo;
    switchTab = routerObj === null || routerObj === void 0 ? void 0 : routerObj.switchTab;
    reLaunch = routerObj === null || routerObj === void 0 ? void 0 : routerObj.reLaunch;
}
catch (error) { }
export default function Navigator(props) {
    const { url = '', openType, delta } = props;
    const handleClick = useCallback(() => {
        switch (openType) {
            case 'navigateBack':
                navigateBack({ delta });
                break;
            case 'redirect':
                redirectTo({ url });
                break;
            case 'switchTab':
                switchTab({ url });
                break;
            case 'reLaunch':
                reLaunch({ url });
                break;
            default:
                navigateTo({ url });
                break;
        }
    }, [openType, url, delta]);
    const otherProps = omit(props, ['url', 'openType', 'delta']);
    return React.createElement(View, Object.assign({ onClick: handleClick }, otherProps));
}
//# sourceMappingURL=index.js.map