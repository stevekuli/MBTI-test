{"version":3,"file":"canvasToTempFilePath.js","sources":["../../../src/api/canvas/canvasToTempFilePath.ts"],"sourcesContent":["import Taro from '@tarojs/api'\n\nimport { findDOM } from '../../utils'\nimport { MethodHandler } from '../../utils/handler'\n\n/**\n * 把当前画布指定区域的内容导出生成指定大小的图片。在 draw() 回调里调用该方法才能保证图片导出成功。\n * @todo 暂未支持尺寸相关功能\n */\nexport const canvasToTempFilePath: typeof Taro.canvasToTempFilePath = ({ canvasId, fileType, quality, success, fail, complete }, inst) => {\n  const handle = new MethodHandler({ name: 'canvasToTempFilePath', success, fail, complete })\n  const el = findDOM(inst) as HTMLElement\n  const canvas = el?.querySelector(`canvas[canvas-id=\"${canvasId}\"]`) as HTMLCanvasElement\n\n  try {\n    const dataURL = canvas?.toDataURL(`image/${(fileType === 'jpg' ? 'jpeg' : fileType) || 'png'}`, quality)\n    return handle.success({\n      tempFilePath: dataURL\n    })\n  } catch (e) {\n    return handle.fail({\n      errMsg: e.message\n    })\n  }\n}\n"],"names":[],"mappings":";;;AAKA;;;AAGG;MACU,oBAAoB,GAAqC,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,IAAI,KAAI;AACvI,IAAA,MAAM,MAAM,GAAG,IAAI,aAAa,CAAC,EAAE,IAAI,EAAE,sBAAsB,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAA;AAC3F,IAAA,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAgB,CAAA;AACvC,IAAA,MAAM,MAAM,GAAG,EAAE,KAAA,IAAA,IAAF,EAAE,KAAF,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAE,CAAE,aAAa,CAAC,CAAA,kBAAA,EAAqB,QAAQ,CAAA,EAAA,CAAI,CAAsB,CAAA;IAExF,IAAI;AACF,QAAA,MAAM,OAAO,GAAG,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,SAAS,CAAC,CAAS,MAAA,EAAA,CAAC,QAAQ,KAAK,KAAK,GAAG,MAAM,GAAG,QAAQ,KAAK,KAAK,CAAA,CAAE,EAAE,OAAO,CAAC,CAAA;QACxG,OAAO,MAAM,CAAC,OAAO,CAAC;AACpB,YAAA,YAAY,EAAE,OAAO;AACtB,SAAA,CAAC,CAAA;AACH,KAAA;AAAC,IAAA,OAAO,CAAC,EAAE;QACV,OAAO,MAAM,CAAC,IAAI,CAAC;YACjB,MAAM,EAAE,CAAC,CAAC,OAAO;AAClB,SAAA,CAAC,CAAA;AACH,KAAA;AACH;;;;"}