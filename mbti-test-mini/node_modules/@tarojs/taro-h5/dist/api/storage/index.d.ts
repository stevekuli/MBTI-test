import Taro from '@tarojs/api';
declare const setStorageSync: typeof Taro.setStorageSync;
declare const setStorage: typeof Taro.setStorage;
declare const revokeBufferURL: (option?: {}, ...args: any[]) => Promise<Partial<TaroGeneral.CallbackResult> & Record<string, unknown> & TaroGeneral.CallbackResult>;
declare const removeStorageSync: typeof Taro.removeStorageSync;
declare const removeStorage: typeof Taro.removeStorage;
declare const getStorageSync: typeof Taro.getStorageSync;
declare const getStorageInfoSync: typeof Taro.getStorageInfoSync;
declare const getStorageInfo: typeof Taro.getStorageInfo;
declare const getStorage: typeof Taro.getStorage;
declare const createBufferURL: (option?: {}, ...args: any[]) => Promise<Partial<TaroGeneral.CallbackResult> & Record<string, unknown> & TaroGeneral.CallbackResult>;
declare const clearStorageSync: typeof Taro.clearStorageSync;
declare const clearStorage: typeof Taro.clearStorage;
declare const batchSetStorageSync: (option?: {}, ...args: any[]) => Promise<Partial<TaroGeneral.CallbackResult> & Record<string, unknown> & TaroGeneral.CallbackResult>;
declare const batchSetStorage: (option?: {}, ...args: any[]) => Promise<Partial<TaroGeneral.CallbackResult> & Record<string, unknown> & TaroGeneral.CallbackResult>;
declare const batchGetStorageSync: (option?: {}, ...args: any[]) => Promise<Partial<TaroGeneral.CallbackResult> & Record<string, unknown> & TaroGeneral.CallbackResult>;
declare const batchGetStorage: (option?: {}, ...args: any[]) => Promise<Partial<TaroGeneral.CallbackResult> & Record<string, unknown> & TaroGeneral.CallbackResult>;
export { setStorageSync, setStorage, revokeBufferURL, removeStorageSync, removeStorage, getStorageSync, getStorageInfoSync, getStorageInfo, getStorage, createBufferURL, clearStorageSync, clearStorage, batchSetStorageSync, batchSetStorage, batchGetStorageSync, batchGetStorage };
export * from "./background-fetch.js";
export * from "./cache-manager.js";
