{"version":3,"file":"upload.js","sources":["../../../src/api/network/upload.ts"],"sourcesContent":["import Taro from '@tarojs/api'\r\n\r\nimport { CallbackManager } from '../../utils/handler'\r\nimport {\r\n  convertObjectUrlToBlob,\r\n  NETWORK_TIMEOUT,\r\n  setHeader,\r\n  XHR_STATS\r\n} from './utils'\r\n\r\nconst createUploadTask = ({ url, filePath, formData = {}, name, header, timeout, fileName, withCredentials = true, success, error }): Taro.UploadTask => {\r\n  let timeoutInter: ReturnType<typeof setTimeout>\r\n  let formKey\r\n  const apiName = 'uploadFile'\r\n  const xhr = new XMLHttpRequest()\r\n  const form = new FormData()\r\n  const callbackManager = {\r\n    headersReceived: new CallbackManager(),\r\n    progressUpdate: new CallbackManager()\r\n  }\r\n\r\n  xhr.open('POST', url)\r\n  xhr.withCredentials = !!withCredentials\r\n  setHeader(xhr, header)\r\n\r\n  for (formKey in formData) {\r\n    form.append(formKey, formData[formKey])\r\n  }\r\n\r\n  xhr.upload.onprogress = e => {\r\n    const { loaded, total } = e\r\n    callbackManager.progressUpdate.trigger({\r\n      progress: Math.round(loaded / total * 100),\r\n      totalBytesSent: loaded,\r\n      totalBytesExpectedToSend: total\r\n    })\r\n  }\r\n\r\n  xhr.onreadystatechange = () => {\r\n    if (xhr.readyState !== XHR_STATS.HEADERS_RECEIVED) return\r\n    callbackManager.headersReceived.trigger({\r\n      header: xhr.getAllResponseHeaders()\r\n    })\r\n  }\r\n\r\n  xhr.onload = () => {\r\n    const status = xhr.status\r\n    clearTimeout(timeoutInter)\r\n    success({\r\n      errMsg: `${apiName}:ok`,\r\n      statusCode: status,\r\n      data: xhr.responseText || xhr.response\r\n    })\r\n  }\r\n\r\n  xhr.onabort = () => {\r\n    clearTimeout(timeoutInter)\r\n    error({\r\n      errMsg: `${apiName}:fail abort`\r\n    })\r\n  }\r\n\r\n  xhr.onerror = (e: ProgressEvent<EventTarget> & { message?: string }) => {\r\n    clearTimeout(timeoutInter)\r\n    error({\r\n      errMsg: `${apiName}:fail ${e.message}`\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 中断任务\r\n   */\r\n  const abort = () => {\r\n    clearTimeout(timeoutInter)\r\n    xhr.abort()\r\n  }\r\n\r\n  const send = () => {\r\n    xhr.send(form)\r\n    timeoutInter = setTimeout(() => {\r\n      xhr.onabort = null\r\n      xhr.onload = null\r\n      xhr.upload.onprogress = null\r\n      xhr.onreadystatechange = null\r\n      xhr.onerror = null\r\n      abort()\r\n      error({\r\n        errMsg: `${apiName}:fail timeout`\r\n      })\r\n    }, timeout || NETWORK_TIMEOUT)\r\n  }\r\n\r\n  convertObjectUrlToBlob(filePath)\r\n    .then((fileObj: string | (Blob & { name?: string })) => {\r\n      if (!fileName) {\r\n        fileName = typeof fileObj !== 'string' && fileObj.name\r\n      }\r\n      form.append(name, fileObj as Blob, fileName || `file-${Date.now()}`)\r\n      send()\r\n    })\r\n    .catch(e => {\r\n      error({\r\n        errMsg: `${apiName}:fail ${e.message}`\r\n      })\r\n    })\r\n\r\n  /**\r\n   * 监听 HTTP Response Header 事件。会比请求完成事件更早\r\n   * @param {HeadersReceivedCallback} callback HTTP Response Header 事件的回调函数\r\n   */\r\n  const onHeadersReceived = callbackManager.headersReceived.add\r\n  /**\r\n   * 取消监听 HTTP Response Header 事件\r\n   * @param {HeadersReceivedCallback} callback HTTP Response Header 事件的回调函数\r\n   */\r\n  const offHeadersReceived = callbackManager.headersReceived.remove\r\n\r\n  /**\r\n   * 监听进度变化事件\r\n   * @param {ProgressUpdateCallback} callback HTTP Response Header 事件的回调函数\r\n   */\r\n  const onProgressUpdate = callbackManager.progressUpdate.add\r\n  /**\r\n   * 取消监听进度变化事件\r\n   * @param {ProgressUpdateCallback} callback HTTP Response Header 事件的回调函数\r\n   */\r\n  const offProgressUpdate = callbackManager.progressUpdate.remove\r\n\r\n  return {\r\n    abort,\r\n    onHeadersReceived,\r\n    offHeadersReceived,\r\n    onProgressUpdate,\r\n    offProgressUpdate\r\n  }\r\n}\r\n\r\n/**\r\n * 将本地资源上传到服务器。客户端发起一个 HTTPS POST 请求，其中 content-type 为 multipart/form-data。使用前请注意阅读相关说明。\r\n */\r\nexport const uploadFile: typeof Taro.uploadFile = ({ url, filePath, name, header, formData, timeout, fileName, withCredentials, success, fail, complete }) => {\r\n  let task!: Taro.UploadTask\r\n  const result: ReturnType<typeof Taro.uploadFile> = new Promise((resolve, reject) => {\r\n    task = createUploadTask({\r\n      url,\r\n      header,\r\n      name,\r\n      filePath,\r\n      formData,\r\n      timeout,\r\n      fileName,\r\n      withCredentials,\r\n      success: res => {\r\n        success && success(res)\r\n        complete && complete(res)\r\n        resolve(res)\r\n      },\r\n      error: res => {\r\n        fail && fail(res)\r\n        complete && complete(res)\r\n        reject(res)\r\n      }\r\n    })\r\n  }) as any\r\n\r\n  result.headersReceive = task.onHeadersReceived.bind(task)\r\n  result.progress = task.onProgressUpdate.bind(task)\r\n\r\n  const properties = {}\r\n  Object.keys(task).forEach(key => {\r\n    properties[key] = {\r\n      get () {\r\n        return typeof task[key] === 'function' ? task[key].bind(task) : task[key]\r\n      }\r\n    }\r\n  })\r\n  return Object.defineProperties(result, properties)\r\n}\r\n"],"names":[],"mappings":"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"}