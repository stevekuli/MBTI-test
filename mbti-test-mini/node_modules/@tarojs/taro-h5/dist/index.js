import taro from './api/taro.js';
export { Behavior, Current, ENV_TYPE, Events, Link, canIUseWebp, eventCenter, getAppInfo, getEnv, initPxTransform, interceptorify, interceptors, options, preload, pxTransform, requirePlugin } from './api/taro.js';
import './api/index.js';
export { createInterstitialAd, createRewardedVideoAd } from './api/ad/index.js';
export { faceDetect, initFaceDetect, stopFaceDetect } from './api/ai/facial.js';
export { createInferenceSession, getInferenceEnvInfo } from './api/ai/inference.js';
export { createVKSession, isVKSupport } from './api/ai/visual.js';
export { getOpenUserInfo, tradePay } from './api/alipay/index.js';
export { getUserCryptoManager } from './api/base/crypto.js';
export { getLogManager, getRealtimeLogManager, setEnableDebug } from './api/base/debug.js';
export { getPerformance, preloadAssets, preloadSkylineView, preloadWebview, reportPerformance } from './api/base/performance.js';
export { getAppAuthorizeSetting, getAppBaseInfo, getDeviceInfo, getRendererUserAgent, getSkylineInfo, getSkylineInfoSync, getSystemInfo, getSystemInfoAsync, getSystemInfoSync, getSystemSetting, getWindowInfo, openAppAuthorizeSetting, openSystemBluetoothSetting } from './api/base/system.js';
export { getUpdateManager, updateWeChatApp } from './api/base/update.js';
export { offAppHide, offAppShow, offAudioInterruptionBegin, offAudioInterruptionEnd, offError, offLazyLoadError, offPageNotFound, offThemeChange, offUnhandledRejection, onAppHide, onAppShow, onAudioInterruptionBegin, onAudioInterruptionEnd, onError, onLazyLoadError, onPageNotFound, onThemeChange, onUnhandledRejection } from './api/base/weapp/app-event.js';
export { getEnterOptionsSync, getLaunchOptionsSync } from './api/base/weapp/life-cycle.js';
export { arrayBufferToBase64, base64ToArrayBuffer, env } from './api/base/index.js';
export { createCanvasContext } from './api/canvas/createCanvasContext.js';
export { canvasToTempFilePath } from './api/canvas/canvasToTempFilePath.js';
export { canvasPutImageData } from './api/canvas/canvasPutImageData.js';
export { canvasGetImageData } from './api/canvas/canvasGetImageData.js';
export { createOffscreenCanvas } from './api/canvas/index.js';
export { cloud } from './api/cloud/index.js';
export { getExptInfoSync, reportAnalytics, reportEvent, reportMonitor } from './api/data-analysis/index.js';
export { offAccelerometerChange, onAccelerometerChange, startAccelerometer, stopAccelerometer } from './api/device/accelerometer.js';
export { checkIsOpenAccessibility } from './api/device/accessibility.js';
export { getBatteryInfo, getBatteryInfoSync } from './api/device/battery.js';
export { closeBluetoothAdapter, getBluetoothAdapterState, getBluetoothDevices, getConnectedBluetoothDevices, isBluetoothDevicePaired, makeBluetoothPair, offBluetoothAdapterStateChange, offBluetoothDeviceFound, onBluetoothAdapterStateChange, onBluetoothDeviceFound, openBluetoothAdapter, startBluetoothDevicesDiscovery, stopBluetoothDevicesDiscovery } from './api/device/bluetooth.js';
export { closeBLEConnection, createBLEConnection, getBLEDeviceCharacteristics, getBLEDeviceRSSI, getBLEDeviceServices, getBLEMTU, notifyBLECharacteristicValueChange, offBLECharacteristicValueChange, offBLEConnectionStateChange, offBLEMTUChange, onBLECharacteristicValueChange, onBLEConnectionStateChange, onBLEMTUChange, readBLECharacteristicValue, setBLEMTU, writeBLECharacteristicValue } from './api/device/bluetooth-ble.js';
export { createBLEPeripheralServer, offBLEPeripheralConnectionStateChanged, onBLEPeripheralConnectionStateChanged } from './api/device/bluetooth-peripheral.js';
export { addPhoneCalendar, addPhoneRepeatCalendar } from './api/device/calendar.js';
export { getClipboardData, setClipboardData } from './api/device/clipboard.js';
export { offCompassChange, onCompassChange, startCompass, stopCompass } from './api/device/compass.js';
export { addPhoneContact, chooseContact } from './api/device/contact.js';
export { getRandomValues } from './api/device/crypto.js';
export { offGyroscopeChange, onGyroscopeChange, startGyroscope, stopGyroscope } from './api/device/gyroscope.js';
export { getBeacons, offBeaconServiceChange, offBeaconUpdate, onBeaconServiceChange, onBeaconUpdate, startBeaconDiscovery, stopBeaconDiscovery } from './api/device/iBeacon.js';
export { getSelectedTextRange, hideKeyboard, offKeyboardHeightChange, onKeyboardHeightChange } from './api/device/keyboard.js';
export { offMemoryWarning, onMemoryWarning } from './api/device/memory.js';
export { offDeviceMotionChange, onDeviceMotionChange, startDeviceMotionListening, stopDeviceMotionListening } from './api/device/motion.js';
export { getLocalIPAddress, getNetworkType, offNetworkStatusChange, offNetworkWeakChange, onNetworkStatusChange, onNetworkWeakChange } from './api/device/network.js';
export { getHCEState, getNFCAdapter, offHCEMessage, onHCEMessage, sendHCEMessage, startHCE, stopHCE } from './api/device/nfc.js';
export { makePhoneCall } from './api/device/phone.js';
export { scanCode } from './api/device/scan.js';
export { getScreenBrightness, getScreenRecordingState, offScreenRecordingStateChanged, offUserCaptureScreen, onScreenRecordingStateChanged, onUserCaptureScreen, setKeepScreenOn, setScreenBrightness, setVisualEffectOnCapture } from './api/device/screen.js';
export { sendSms } from './api/device/sms.js';
export { vibrateLong, vibrateShort } from './api/device/vibrate.js';
export { connectWifi, getConnectedWifi, getWifiList, offGetWifiList, offWifiConnected, offWifiConnectedWithPartialInfo, onGetWifiList, onWifiConnected, onWifiConnectedWithPartialInfo, setWifiList, startWifi, stopWifi } from './api/device/wifi.js';
export { getExtConfig, getExtConfigSync } from './api/ext/index.js';
export { getFileInfo, getFileSystemManager, getSavedFileInfo, getSavedFileList, openDocument, removeSavedFile, saveFile, saveFileToDisk } from './api/files/index.js';
export { getCurrentPages, history, navigateBack, navigateTo, reLaunch, redirectTo, switchTab } from '@tarojs/router';
export { getApp, getCurrentInstance } from './api/framework/index.js';
export { getLocation } from './api/location/getLocation.js';
export { chooseLocation } from './api/location/chooseLocation.js';
export { offLocationChange, offLocationChangeError, onLocationChange, onLocationChangeError, startLocationUpdate, stopLocationUpdate } from './api/location/locationChange.js';
export { choosePoi, getFuzzyLocation, openLocation, startLocationUpdateBackground } from './api/location/index.js';
export { createAudioContext, createInnerAudioContext, createMediaAudioPlayer, createWebAudioContext, getAvailableAudioSources, pauseVoice, playVoice, setInnerAudioOption, stopVoice } from './api/media/audio/index.js';
export { getBackgroundAudioManager, getBackgroundAudioPlayerState, onBackgroundAudioPause, onBackgroundAudioPlay, onBackgroundAudioStop, pauseBackgroundAudio, playBackgroundAudio, seekBackgroundAudio, stopBackgroundAudio } from './api/media/background-audio/index.js';
export { createCameraContext } from './api/media/camera.js';
export { saveImageToPhotosAlbum } from './api/media/image/saveImageToPhotosAlbum.js';
export { getImageInfo } from './api/media/image/getImageInfo.js';
export { previewImage } from './api/media/image/previewImage.js';
export { chooseImage } from './api/media/image/chooseImage.js';
export { chooseMessageFile, compressImage, cropImage, editImage, previewMedia } from './api/media/image/index.js';
export { createLivePlayerContext, createLivePusherContext } from './api/media/live.js';
export { createMapContext } from './api/media/map.js';
export { createMediaRecorder } from './api/media/media-recorder.js';
export { getRecorderManager, startRecord, stopRecord } from './api/media/recorder.js';
export { saveVideoToPhotosAlbum } from './api/media/video/saveVideoToPhotosAlbum.js';
export { getVideoInfo } from './api/media/video/getVideoInfo.js';
export { chooseMedia } from './api/media/video/chooseMedia.js';
export { chooseVideo } from './api/media/video/chooseVideo.js';
export { compressVideo, createVideoContext, openVideoEditor } from './api/media/video/index.js';
export { createVideoDecoder } from './api/media/video-decoder.js';
export { createMediaContainer } from './api/media/video-processing.js';
export { exitVoIPChat, join1v1Chat, joinVoIPChat, offVoIPChatInterrupted, offVoIPChatMembersChanged, offVoIPChatSpeakersChanged, offVoIPChatStateChanged, offVoIPVideoMembersChanged, onVoIPChatInterrupted, onVoIPChatMembersChanged, onVoIPChatSpeakersChanged, onVoIPChatStateChanged, onVoIPVideoMembersChanged, setEnable1v1Chat, subscribeVoIPVideoMembers, updateVoIPChatMuteConfig } from './api/media/voip.js';
export { exitMiniProgram, navigateBackMiniProgram, navigateToMiniProgram, openBusinessView, openEmbeddedMiniProgram } from './api/navigate/index.js';
export { downloadFile } from './api/network/download.js';
export { offLocalServiceDiscoveryStop, offLocalServiceFound, offLocalServiceLost, offLocalServiceResolveFail, onLocalServiceDiscoveryStop, onLocalServiceFound, onLocalServiceLost, onLocalServiceResolveFail, startLocalServiceDiscovery, stopLocalServiceDiscovery } from './api/network/mdns.js';
export { addInterceptor, cleanInterceptors, request } from './api/network/request/index.js';
export { createTCPSocket } from './api/network/tcp.js';
export { createUDPSocket } from './api/network/udp.js';
export { uploadFile } from './api/network/upload.js';
export { closeSocket, connectSocket, onSocketClose, onSocketError, onSocketMessage, onSocketOpen, sendSocketMessage } from './api/network/websocket/index.js';
export { SocketTask } from './api/network/websocket/socketTask.js';
export { getAccountInfoSync } from './api/open-api/account.js';
export { chooseAddress } from './api/open-api/address.js';
export { authorize, authorizeForMiniProgram } from './api/open-api/authorize.js';
export { addCard, openCard } from './api/open-api/card.js';
export { getChannelsLiveInfo, getChannelsLiveNoticeInfo, getChannelsShareKey, openChannelsActivity, openChannelsEvent, openChannelsLive, openChannelsUserProfile, reserveChannelsLive } from './api/open-api/channels-live.js';
export { openCustomerServiceChat } from './api/open-api/customer-service.js';
export { getDeviceVoIPList, requestDeviceVoIP } from './api/open-api/device-voip.js';
export { checkIsSupportFacialRecognition, faceVerifyForPay, startFacialRecognitionVerify, startFacialRecognitionVerifyAndUploadVideo } from './api/open-api/facial.js';
export { addFileToFavorites, addVideoToFavorites } from './api/open-api/favorites.js';
export { getGroupEnterInfo } from './api/open-api/group.js';
export { chooseInvoice, chooseInvoiceTitle } from './api/open-api/invoice.js';
export { chooseLicensePlate } from './api/open-api/license-plate.js';
export { checkSession, login, pluginLogin } from './api/open-api/login.js';
export { checkIsAddedToMyMiniProgram } from './api/open-api/my-miniprogram.js';
export { getPrivacySetting, onNeedPrivacyAuthorization, openPrivacyContract, requirePrivacyAuthorize } from './api/open-api/privacy.js';
export { showRedPackage } from './api/open-api/red-package.js';
export { getSetting, openSetting } from './api/open-api/settings.js';
export { checkIsSoterEnrolledInDevice, checkIsSupportSoterAuthentication, startSoterAuthentication } from './api/open-api/soter.js';
export { requestSubscribeDeviceMessage, requestSubscribeMessage } from './api/open-api/subscribe-message.js';
export { getUserInfo, getUserProfile } from './api/open-api/user-info.js';
export { getWeRunData, shareToWeRun } from './api/open-api/werun.js';
export { requestOrderPayment, requestPayment, requestPluginPayment } from './api/payment/index.js';
export { addRecentColorSign, applyAddToMyApps, getGuildInfo, getQQRunData, isAddedToMyApps, openQzonePublish, setCustomDress, setOfficialDress, updateQQApp } from './api/qq/index.js';
export { authPrivateMessage, getShareInfo, hideShareMenu, offCopyUrl, onCopyUrl, shareFileMessage, shareVideoMessage, showShareImageMenu, showShareMenu, updateShareMenu } from './api/share/index.js';
export { getBackgroundFetchData, getBackgroundFetchToken, onBackgroundFetchData, setBackgroundFetchToken } from './api/storage/background-fetch.js';
export { createCacheManager } from './api/storage/cache-manager.js';
export { batchGetStorage, batchGetStorageSync, batchSetStorage, batchSetStorageSync, clearStorage, clearStorageSync, createBufferURL, getStorage, getStorageInfo, getStorageInfoSync, getStorageSync, removeStorage, removeStorageSync, revokeBufferURL, setStorage, setStorageSync } from './api/storage/index.js';
export { advancedGeneralIdentify, animalClassify, carClassify, dishClassify, getSwanId, imageAudit, logoClassify, navigateBackSmartProgram, navigateToSmartGameProgram, navigateToSmartProgram, objectDetectIdentify, ocrBankCard, ocrDrivingLicense, ocrIdCard, ocrVehicleLicense, plantClassify, preloadSubPackage, requestPolymerPayment, setPageInfo, textReview, textToAudio } from './api/swan/index.js';
export { createAnimation } from './api/ui/animation/index.js';
export { setBackgroundColor, setBackgroundTextStyle } from './api/ui/background.js';
export { nextTick } from './api/ui/custom-component.js';
export { loadFontFace } from './api/ui/fonts.js';
export { disableAlertBeforeUnload, enableAlertBeforeUnload, hideLoading, hideToast, showActionSheet, showLoading, showModal, showToast } from './api/ui/interaction/index.js';
export { getMenuButtonBoundingClientRect } from './api/ui/menu.js';
export { hideHomeButton, hideNavigationBarLoading, setNavigationBarColor, setNavigationBarTitle, showNavigationBarLoading } from './api/ui/navigation-bar/index.js';
export { startPullDownRefresh, stopPullDownRefresh } from './api/ui/pull-down-refresh.js';
export { pageScrollTo } from './api/ui/scroll/index.js';
export { setTopBarText } from './api/ui/sticky.js';
export { hideTabBar, hideTabBarRedDot, initTabBarApis, removeTabBarBadge, setTabBarBadge, setTabBarItem, setTabBarStyle, showTabBar, showTabBarRedDot } from './api/ui/tab-bar.js';
export { checkIsPictureInPictureActive, offWindowResize, onWindowResize, setWindowSize } from './api/ui/window.js';
export { createWorker } from './api/worker/index.js';
export { createIntersectionObserver, createMediaQueryObserver, createSelectorQuery } from './api/wxml/index.js';
export { NodesRef } from './api/wxml/nodesRef.js';



export { taro as default };
//# sourceMappingURL=index.js.map
