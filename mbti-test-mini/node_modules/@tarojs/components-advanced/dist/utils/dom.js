import { createSelectorQuery } from '@tarojs/taro';

function getRectSize(id, success, fail, retryMs = 500) {
    const query = createSelectorQuery();
    try {
        query.select(id).boundingClientRect((res) => {
            if (res) {
                success === null || success === void 0 ? void 0 : success(res);
            }
            else {
                fail === null || fail === void 0 ? void 0 : fail();
            }
        }).exec();
    }
    catch (err) {
        setTimeout(() => {
            getRectSize(id, success, fail, retryMs);
        }, retryMs);
    }
}
function getRectSizeSync(id, retryMs = 500, retryTimes = 5) {
    return new Promise((resolve) => {
        function retry() {
            if (retryTimes <= 0)
                return;
            setTimeout(async () => {
                try {
                    const res = await getRectSizeSync(id, retryMs, --retryTimes);
                    resolve(res);
                }
                catch (err) {
                    retry();
                }
            }, retryMs);
        }
        getRectSize(id, resolve, retry, retryMs);
    });
}
async function getScrollViewContextNode(id) {
    const query = createSelectorQuery();
    return new Promise((resolve) => query.select(id).node(({ node }) => resolve(node)).exec());
}

export { getRectSize, getRectSizeSync, getScrollViewContextNode };
//# sourceMappingURL=dom.js.map
