{"version":3,"file":"helper.js","sources":["../../src/utils/helper.ts"],"sourcesContent":["// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nexport const defaultItemKey = (index: number, _itemData?: unknown) => index\n\nexport function getOffsetForIndexAndAlignment ({\n  align = 'auto',\n  containerSize = 0,\n  currentOffset = 0,\n  scrollSize = 0,\n  slideSize = 0,\n  targetOffset = 0,\n}) {\n  const lastItemOffset = Math.max(0, scrollSize - containerSize)\n  const maxOffset = Math.min(lastItemOffset, targetOffset)\n  const minOffset = Math.max(0, targetOffset - containerSize + slideSize)\n\n  if (align === 'smart') {\n    if (currentOffset >= minOffset - containerSize && currentOffset <= maxOffset + containerSize) {\n      align = 'auto'\n    } else {\n      align = 'center'\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset\n\n    case 'end':\n      return minOffset\n\n    case 'center':\n    {\n      // \"Centered\" offset is usually the average of the min and max.\n      // But near the edges of the list, this doesn't hold true.\n      const middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2)\n\n      if (middleOffset < Math.ceil(containerSize / 2)) {\n        return 0 // near the beginning\n      } else if (middleOffset > lastItemOffset + Math.floor(containerSize / 2)) {\n        return lastItemOffset // near the end\n      } else {\n        return middleOffset\n      }\n    }\n\n    case 'auto':\n    default:\n      if (currentOffset >= minOffset && currentOffset <= maxOffset) {\n        return currentOffset\n      } else if (currentOffset < minOffset) {\n        return minOffset\n      } else {\n        return maxOffset\n      }\n  }\n}\n"],"names":[],"mappings":"AAAA;AACA;AACO,MAAM,cAAc,GAAG,CAAC,KAAa,EAAE,SAAmB,KAAK,MAAK;AAErE,SAAU,6BAA6B,CAAE,EAC7C,KAAK,GAAG,MAAM,EACd,aAAa,GAAG,CAAC,EACjB,aAAa,GAAG,CAAC,EACjB,UAAU,GAAG,CAAC,EACd,SAAS,GAAG,CAAC,EACb,YAAY,GAAG,CAAC,GACjB,EAAA;AACC,IAAA,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,GAAG,aAAa,CAAC,CAAA;IAC9D,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,CAAA;AACxD,IAAA,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,GAAG,aAAa,GAAG,SAAS,CAAC,CAAA;IAEvE,IAAI,KAAK,KAAK,OAAO,EAAE;QACrB,IAAI,aAAa,IAAI,SAAS,GAAG,aAAa,IAAI,aAAa,IAAI,SAAS,GAAG,aAAa,EAAE;YAC5F,KAAK,GAAG,MAAM,CAAA;AACf,SAAA;AAAM,aAAA;YACL,KAAK,GAAG,QAAQ,CAAA;AACjB,SAAA;AACF,KAAA;AAED,IAAA,QAAQ,KAAK;AACX,QAAA,KAAK,OAAO;AACV,YAAA,OAAO,SAAS,CAAA;AAElB,QAAA,KAAK,KAAK;AACR,YAAA,OAAO,SAAS,CAAA;AAElB,QAAA,KAAK,QAAQ;AACb,YAAA;;;AAGE,gBAAA,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,SAAS,GAAG,SAAS,IAAI,CAAC,CAAC,CAAA;gBAExE,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,EAAE;oBAC/C,OAAO,CAAC,CAAA;AACT,iBAAA;AAAM,qBAAA,IAAI,YAAY,GAAG,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,EAAE;oBACxE,OAAO,cAAc,CAAA;AACtB,iBAAA;AAAM,qBAAA;AACL,oBAAA,OAAO,YAAY,CAAA;AACpB,iBAAA;AACF,aAAA;AAED,QAAA,KAAK,MAAM,CAAC;AACZ,QAAA;AACE,YAAA,IAAI,aAAa,IAAI,SAAS,IAAI,aAAa,IAAI,SAAS,EAAE;AAC5D,gBAAA,OAAO,aAAa,CAAA;AACrB,aAAA;iBAAM,IAAI,aAAa,GAAG,SAAS,EAAE;AACpC,gBAAA,OAAO,SAAS,CAAA;AACjB,aAAA;AAAM,iBAAA;AACL,gBAAA,OAAO,SAAS,CAAA;AACjB,aAAA;AACJ,KAAA;AACH;;;;"}