import definition from '../../dist/definition.json.js';
import isMatchWith from 'lodash-es/isMatchWith';
import set from 'lodash-es/set';
import './taro.js';
import './taro-h5.js';
import Taro__default from '@tarojs/taro-h5/dist/api/taro';
export * from '@tarojs/taro-h5/dist/api/taro';
export { default } from '@tarojs/taro-h5/dist/api/taro';
export * from '@tarojs/taro-h5/dist/api/index';

let list = null;
function canIUse(scheme = '') {
    /** Note: 此处方法仅作适配使用，用于避免 babel 无法识别的情况，比如通过变量传递的 scheme 等等
     * 同时，此处的 scheme 不包括在编译时写入的 hooks 等方法，故而不支持相关判断
     */
    if (list === null) {
        list = Object.assign(Object.assign(Object.assign({}, definition.apis), definition.components), { canIUse: '*' });
    }
    if (!scheme)
        return false;
    const o = set({}, scheme, true);
    return isMatchWith(list, o, (a, b) => {
        if (a === '*' || b === true)
            return true;
    });
}

export { canIUse };
//# sourceMappingURL=index.js.map
