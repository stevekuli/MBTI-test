var _a, _b;
/**
 * router-rn 接口都改为require 引入， 单页不引用的router
 *
 */
let routerObj = {};
try {
    routerObj = require('@tarojs/router-rn');
    // eslint-disable-next-line
}
catch (e) { }
function getApi(key) {
    if (!(routerObj === null || routerObj === void 0 ? void 0 : routerObj[key])) {
        return () => {
            console.error(`Single page can not support ${key}, if you have multiple pages configured, you can try restart and reset cache`);
        };
    }
    return routerObj === null || routerObj === void 0 ? void 0 : routerObj[key];
}
export const rnNavigationRef = (_a = routerObj === null || routerObj === void 0 ? void 0 : routerObj.navigationRef) !== null && _a !== void 0 ? _a : null;
export const PageProvider = (_b = routerObj === null || routerObj === void 0 ? void 0 : routerObj.PageProvider) !== null && _b !== void 0 ? _b : null;
export const getRouteEventChannel = getApi('getRouteEventChannel');
export const getCurrentRoute = getApi('getCurrentRoute');
export const isTabPage = getApi('isTabPage');
export const createRouter = getApi('createRouter');
export const getInitOptions = getApi('getInitOptions');
export const hideNavigationBarLoading = getApi('hideNavigationBarLoading');
export const hideTabBar = getApi('hideTabBar');
export const hideTabBarRedDot = getApi('hideTabBarRedDot');
export const navigateBack = getApi('navigateBack');
export const navigateTo = getApi('navigateTo');
export const redirectTo = getApi('redirectTo');
export const reLaunch = getApi('reLaunch');
export const switchTab = getApi('switchTab');
export const removeTabBarBadge = getApi('removeTabBarBadge');
export const setNavigationBarColor = getApi('setNavigationBarColor');
export const setNavigationBarTitle = getApi('setNavigationBarTitle');
export const setTabBarBadge = getApi('setTabBarBadge');
export const setTabBarItem = getApi('setTabBarItem');
export const setTabBarStyle = getApi('setTabBarStyle');
export const showNavigationBarLoading = getApi('showNavigationBarLoading');
export const showTabBar = getApi('showTabBar');
export const showTabBarRedDot = getApi('showTabBarRedDot');
//# sourceMappingURL=router.js.map