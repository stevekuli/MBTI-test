{"version":3,"file":"location.js","sources":["../../src/bom/location.ts"],"sourcesContent":["import { isNumber, isString, warn } from '@tarojs/shared'\n\nimport { CONTEXT_ACTIONS } from '../constants'\nimport { getCurrentInstance } from '../current'\nimport { Events } from '../emitter/emitter'\nimport env from '../env'\nimport { RuntimeCache } from '../utils/cache'\nimport { URL } from './URL'\n\ntype PreValue = ReturnType<typeof URL.prototype._toRaw>\n\ntype Options = {\n  window: any\n}\ntype LocationContext = {\n  lastHref: string\n}\n\nconst INIT_URL = 'https://taro.com'\nconst cache = new RuntimeCache<LocationContext>('location')\n\nclass TaroLocation extends Events {\n  /* private property */\n  #url = new URL(INIT_URL)\n  #noCheckUrl = false\n  #window: any\n\n  constructor (options: Options) {\n    super()\n\n    this.#window = options.window\n\n    this.#reset()\n\n    this.on(\n      '__set_href_without_history__',\n      (href: string) => {\n        this.#noCheckUrl = true\n\n        const lastHash = this.#url.hash\n        this.#url.href = generateFullUrl(href)\n\n        if (lastHash !== this.#url.hash) {\n          this.#window.trigger('hashchange')\n        }\n\n        this.#noCheckUrl = false\n      },\n      null\n    )\n\n    // 切换上下文行为\n    this.on(\n      CONTEXT_ACTIONS.INIT,\n      () => {\n        this.#reset()\n      },\n      null\n    )\n\n    this.on(\n      CONTEXT_ACTIONS.RESTORE,\n      (pageId: string) => {\n        cache.set(pageId, {\n          lastHref: this.href,\n        })\n      },\n      null\n    )\n\n    this.on(\n      CONTEXT_ACTIONS.RECOVER,\n      (pageId: string) => {\n        // 数据恢复时，不需要执行跳转\n        if (cache.has(pageId)) {\n          const ctx = cache.get(pageId)!\n          this.#noCheckUrl = true\n          this.#url.href = ctx.lastHref\n          this.#noCheckUrl = false\n        }\n      },\n      null\n    )\n\n    this.on(\n      CONTEXT_ACTIONS.DESTORY,\n      (pageId: string) => {\n        cache.delete(pageId)\n      },\n      null\n    )\n  }\n\n  /* private method */\n  #reset () {\n    const Current = getCurrentInstance()\n    const router = Current.router\n    if (router) {\n      const { path, params } = router\n      const searchArr = Object.keys(params).map((key) => {\n        return `${key}=${params[key]}`\n      })\n      const searchStr = searchArr.length > 0 ? '?' + searchArr.join('&') : ''\n      const url = `${INIT_URL}${path.startsWith('/') ? path : '/' + path}${searchStr}`\n\n      this.#url = new URL(url)\n\n      this.trigger('__reset_history__', this.href)\n    }\n  }\n\n  #getPreValue (): PreValue {\n    return this.#url._toRaw()\n  }\n\n  #rollBack (href: string) {\n    this.#url.href = href\n  }\n\n  #recordHistory () {\n    this.trigger('__record_history__', this.href)\n  }\n\n  /**\n   * 校验url的变化，是否需要更新history\n   */\n  #checkUrlChange (preValue: PreValue): boolean {\n    if (this.#noCheckUrl) {\n      return false\n    }\n\n    const { protocol, hostname, port, pathname, search, hash } = this.#url._toRaw()\n\n    // 跨域三要素不允许修改\n    if (protocol !== preValue.protocol || hostname !== preValue.hostname || port !== preValue.port) {\n      this.#rollBack(preValue.href)\n      return false\n    }\n\n    // pathname\n    if (pathname !== preValue.pathname) {\n      return true\n    }\n\n    // search\n    if (search !== preValue.search) {\n      return true\n    }\n\n    // hashchange\n    if (hash !== preValue.hash) {\n      this.#window.trigger('hashchange')\n      return true\n    }\n\n    this.#rollBack(preValue.href)\n    return false\n  }\n\n  /* public property */\n  get protocol () {\n    return this.#url.protocol\n  }\n\n  set protocol (val: string) {\n    const REG = /^(http|https):$/i\n    if (!val || !isString(val) || !REG.test(val.trim())) return\n\n    val = val.trim()\n    const preValue = this.#getPreValue()\n    this.#url.protocol = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get host () {\n    return this.#url.host\n  }\n\n  set host (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n\n    const preValue = this.#getPreValue()\n    this.#url.host = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get hostname () {\n    return this.#url.hostname\n  }\n\n  set hostname (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n\n    const preValue = this.#getPreValue()\n    this.#url.hostname = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get port () {\n    return this.#url.port\n  }\n\n  set port (val: string) {\n    const xVal = Number((val = val.trim()))\n    if (!isNumber(xVal) || xVal <= 0) return\n\n    const preValue = this.#getPreValue()\n    this.#url.port = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get pathname () {\n    return this.#url.pathname\n  }\n\n  set pathname (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n\n    const preValue = this.#getPreValue()\n    this.#url.pathname = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get search () {\n    return this.#url.search\n  }\n\n  set search (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n    val = val.startsWith('?') ? val : `?${val}`\n\n    const preValue = this.#getPreValue()\n    this.#url.search = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get hash () {\n    return this.#url.hash\n  }\n\n  // 小程序的navigateTo存在截断hash字符串的问题\n  set hash (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n    val = val.startsWith('#') ? val : `#${val}`\n\n    const preValue = this.#getPreValue()\n    this.#url.hash = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get href () {\n    return this.#url.href\n  }\n\n  set href (val: string) {\n    const REG = /^(http:|https:)?\\/\\/.+/\n    if (!val || !isString(val) || !REG.test((val = val.trim()))) return\n\n    const preValue = this.#getPreValue()\n    this.#url.href = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get origin () {\n    return this.#url.origin\n  }\n\n  set origin (val: string) {\n    const REG = /^(http:|https:)?\\/\\/.+/\n    if (!val || !isString(val) || !REG.test((val = val.trim()))) return\n\n    const preValue = this.#getPreValue()\n    this.#url.origin = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  /* public method */\n  assign () {\n    warn(true, '小程序环境中调用location.assign()无效.')\n  }\n\n  reload () {\n    warn(true, '小程序环境中调用location.reload()无效.')\n  }\n\n  replace (url: string) {\n    this.trigger('__set_href_without_history__', url)\n  }\n\n  toString () {\n    return this.href\n  }\n\n  // For debug\n  get cache () {\n    return cache\n  }\n}\n\nexport type { TaroLocation }\nexport const Location: typeof TaroLocation = process.env.TARO_PLATFORM === 'web' ? env.window.Location : TaroLocation\n\nfunction generateFullUrl (val = '') {\n  const origin = INIT_URL\n  if (/^[/?#]/.test(val)) {\n    return origin + val\n  }\n  return val\n}\n"],"names":[],"mappings":"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"}