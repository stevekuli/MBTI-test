{"version":3,"file":"style.js","sources":["../../../src/dom-external/inner-html/style.ts"],"sourcesContent":["import { NodeType } from '../../dom/node_types'\nimport { unquote } from './utils'\n\nimport type { TaroNode } from '../../dom/node'\nimport type { ParsedTaroElement } from './parser'\n\nconst LEFT_BRACKET = '{'\nconst RIGHT_BRACKET = '}'\nconst CLASS_SELECTOR = '.'\nconst ID_SELECTOR = '#'\nconst CHILD_COMBINATOR = '>'\nconst GENERAL_SIBLING_COMBINATOR = '~'\nconst ADJACENT_SIBLING_COMBINATOR = '+'\n\ninterface ISelector {\n  isChild: boolean\n  isGeneralSibling: boolean\n  isAdjacentSibling: boolean\n  tag: string | null\n  id: string | null\n  class: string[]\n  attrs: {\n    all: boolean\n    key: string\n    value?: string | null\n  }[]\n}\n\ninterface IStyle {\n  content: string\n  selectorList: ISelector[]\n}\n\nexport default class StyleTagParser {\n  styles: IStyle[] = []\n\n  extractStyle (src: string) {\n    const REG_STYLE = /<style\\s?[^>]*>((.|\\n|\\s)+?)<\\/style>/g\n    let html = src\n    // let html = src.replace(/\\n/g, '')\n\n    html = html.replace(REG_STYLE, (_, $1: string) => {\n      const style = $1.trim()\n      this.stringToSelector(style)\n      return ''\n    })\n\n    return html.trim()\n  }\n\n  stringToSelector (style: string) {\n    let lb = style.indexOf(LEFT_BRACKET)\n\n    while (lb > -1) {\n      const rb = style.indexOf(RIGHT_BRACKET)\n      const selectors = style.slice(0, lb).trim()\n\n      let content = style.slice(lb + 1, rb)\n      content = content.replace(/:(.*);/g, function (_, $1) {\n        const t = $1.trim().replace(/ +/g, '+++')\n        return `:${t};`\n      })\n      content = content.replace(/ /g, '')\n      content = content.replace(/\\+\\+\\+/g, ' ')\n\n      if (!(/;$/.test(content))) {\n        content += ';'\n      }\n      selectors.split(',').forEach(src => {\n        const selectorList = this.parseSelector(src)\n        this.styles.push({\n          content,\n          selectorList\n        })\n      })\n      style = style.slice(rb + 1)\n      lb = style.indexOf(LEFT_BRACKET)\n    }\n    // console.log('res this.styles: ', this.styles)\n  }\n\n  parseSelector (src: string) {\n    const list = src\n      .trim()\n      .replace(/ *([>~+]) */g, ' $1')\n      .replace(/ +/g, ' ')\n      .replace(/\\[\\s*([^[\\]=\\s]+)\\s*=\\s*([^[\\]=\\s]+)\\s*\\]/g, '[$1=$2]')\n      .split(' ')\n    const selectors = list.map(item => {\n      const firstChar = item.charAt(0)\n      const selector: ISelector = {\n        isChild: firstChar === CHILD_COMBINATOR,\n        isGeneralSibling: firstChar === GENERAL_SIBLING_COMBINATOR,\n        isAdjacentSibling: firstChar === ADJACENT_SIBLING_COMBINATOR,\n        tag: null,\n        id: null,\n        class: [],\n        attrs: []\n      }\n\n      item = item.replace(/^[>~+]/, '')\n\n      // 属性选择器\n      item = item.replace(/\\[(.+?)\\]/g, function (_, $1: string) {\n        const [key, value] = $1.split('=')\n        const all = $1.indexOf('=') === -1\n\n        const attr = {\n          all,\n          key,\n          value: all ? null : value\n        }\n        selector.attrs.push(attr)\n        return ''\n      })\n\n      item = item.replace(/([.#][A-Za-z0-9-_]+)/g, function (_, $1: string) {\n        if ($1[0] === ID_SELECTOR) {\n          // id 选择器\n          selector.id = $1.substr(1)\n        } else if ($1[0] === CLASS_SELECTOR) {\n          // class 选择器\n          selector.class.push($1.substr(1))\n        }\n        return ''\n      })\n\n      // 标签选择器\n      if (item !== '') {\n        selector.tag = item\n      }\n\n      return selector\n    })\n    return selectors\n  }\n\n  matchStyle (tagName: string, el: ParsedTaroElement, list: number[]): string {\n    const res = sortStyles(this.styles).reduce((str, { content, selectorList }, i) => {\n      let idx = list[i]\n      let selector = selectorList[idx]\n      const nextSelector = selectorList[idx + 1]\n\n      if (nextSelector?.isGeneralSibling || nextSelector?.isAdjacentSibling) {\n        selector = nextSelector\n        idx += 1\n        list[i] += 1\n      }\n\n      let isMatch = this.matchCurrent(tagName, el, selector)\n\n      if (isMatch && selector.isGeneralSibling) {\n        let prev: ParsedTaroElement = getPreviousElement(el)\n        while (prev) {\n          if (prev.h5tagName && this.matchCurrent(prev.h5tagName, prev, selectorList[idx - 1])) {\n            isMatch = true\n            break\n          }\n          prev = getPreviousElement(prev)\n          isMatch = false\n        }\n      }\n      if (isMatch && selector.isAdjacentSibling) {\n        const prev: ParsedTaroElement = getPreviousElement(el)\n        if (!prev || !prev.h5tagName) {\n          isMatch = false\n        } else {\n          const isSiblingMatch = this.matchCurrent(prev.h5tagName, prev, selectorList[idx - 1])\n          if (!isSiblingMatch) {\n            isMatch = false\n          }\n        }\n      }\n\n      if (isMatch) {\n        if (idx === selectorList.length - 1) {\n          return str + content\n        } else if (idx < selectorList.length - 1) {\n          list[i] += 1\n        }\n      } else {\n        // 直接子代组合器: >\n        if (selector.isChild && idx > 0) {\n          list[i] -= 1\n          if (this.matchCurrent(tagName, el, selectorList[list[i]])) {\n            list[i] += 1\n          }\n        }\n      }\n\n      return str\n    }, '')\n    return res\n  }\n\n  matchCurrent (tagName: string, el: ParsedTaroElement, selector: ISelector): boolean {\n    // 标签选择器\n    if (selector.tag && selector.tag !== tagName) return false\n\n    // id 选择器\n    if (selector.id && selector.id !== el.id) return false\n\n    // class 选择器\n    if (selector.class.length) {\n      const classList = el.className.split(' ')\n      for (let i = 0; i < selector.class.length; i++) {\n        const cls = selector.class[i]\n        if (classList.indexOf(cls) === -1) {\n          return false\n        }\n      }\n    }\n\n    // 属性选择器\n    if (selector.attrs.length) {\n      for (let i = 0; i < selector.attrs.length; i++) {\n        const { all, key, value } = selector.attrs[i]\n        if (all && !el.hasAttribute(key)) {\n          return false\n        } else {\n          const attr = el.getAttribute(key)\n          if (attr !== unquote(value || '')) {\n            return false\n          }\n        }\n      }\n    }\n\n    return true\n  }\n}\n\nfunction getPreviousElement (el: TaroNode) {\n  const parent = el.parentElement\n  if (!parent) return null\n\n  const prev = el.previousSibling\n  if (!prev) return null\n\n  if (prev.nodeType === NodeType.ELEMENT_NODE) {\n    return prev\n  } else {\n    return getPreviousElement(prev)\n  }\n}\n\n// 根据 css selector 权重排序: 权重大的靠后\n// @WARN 不考虑伪类\n// https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#specificity_2\nfunction sortStyles (styles: IStyle[]) {\n  return styles.sort((s1, s2) => {\n    const hundreds1 = getHundredsWeight(s1.selectorList)\n    const hundreds2 = getHundredsWeight(s2.selectorList)\n\n    if (hundreds1 !== hundreds2) return hundreds1 - hundreds2\n\n    const tens1 = getTensWeight(s1.selectorList)\n    const tens2 = getTensWeight(s2.selectorList)\n\n    if (tens1 !== tens2) return tens1 - tens2\n\n    const ones1 = getOnesWeight(s1.selectorList)\n    const ones2 = getOnesWeight(s2.selectorList)\n\n    return ones1 - ones2\n  })\n}\n\nfunction getHundredsWeight (selectors: ISelector[]) {\n  return selectors.reduce((pre, cur) => pre + (cur.id ? 1 : 0), 0)\n}\n\nfunction getTensWeight (selectors: ISelector[]) {\n  return selectors.reduce((pre, cur) => pre + cur.class.length + cur.attrs.length, 0)\n}\n\nfunction getOnesWeight (selectors: ISelector[]) {\n  return selectors.reduce((pre, cur) => pre + (cur.tag ? 1 : 0), 0)\n}\n"],"names":[],"mappings":"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"}