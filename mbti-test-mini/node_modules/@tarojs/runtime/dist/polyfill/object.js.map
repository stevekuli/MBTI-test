{"version":3,"file":"object.js","sources":["../../src/polyfill/object.ts"],"sourcesContent":["import { isFunction, isObject, isUndefined } from '@tarojs/shared'\n\nexport function handleObjectAssignPolyfill () {\n  if (!isFunction(Object.assign)) {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.assign = function (target) { // .length of function is 2\n      if (target == null) { // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object')\n      }\n\n      const to = Object(target)\n\n      for (let index = 1; index < arguments.length; index++) {\n        const nextSource = arguments[index]\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (const nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey]\n            }\n          }\n        }\n      }\n      return to\n    }\n  }\n}\n\nexport function handleObjectEntriesPolyfill () {\n  if (!isFunction(Object.entries)) {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.entries = function (obj) { // .length of function is 2\n      if (obj == null) { // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object')\n      }\n\n      const to: [string, unknown][] = []\n\n      if (obj != null) { // Skip over if undefined or null\n        for (const key in obj) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            to.push([key, obj[key]])\n          }\n        }\n      }\n      return to\n    }\n  }\n}\n\nexport function handleObjectDefinePropertyPolyfill () {\n  if (!isFunction(Object.defineProperties)) {\n    Object.defineProperties = function (obj, properties: Record<PropertyKey, Record<PropertyKey, unknown>>) {\n      function convertToDescriptor (desc: Record<string, unknown>) {\n        function hasProperty (obj, prop) {\n          return Object.prototype.hasOwnProperty.call(obj, prop)\n        }\n\n        if (!isObject(desc)) { throw new TypeError('bad desc') }\n\n        const d: Record<PropertyKey, unknown> = {}\n\n        if (hasProperty(desc, 'enumerable')) d.enumerable = !!desc.enumerable\n        if (hasProperty(desc, 'configurable')) { d.configurable = !!desc.configurable }\n        if (hasProperty(desc, 'value')) d.value = desc.value\n        if (hasProperty(desc, 'writable')) d.writable = !!desc.writable\n        if (hasProperty(desc, 'get')) {\n          const g = desc.get\n\n          if (!isFunction(g) && !isUndefined(g)) { throw new TypeError('bad get') }\n          d.get = g\n        }\n        if (hasProperty(desc, 'set')) {\n          const s = desc.set\n          if (!isFunction(s) && !isUndefined(s)) { throw new TypeError('bad set') }\n          d.set = s\n        }\n\n        if (('get' in d || 'set' in d) && ('value' in d || 'writable' in d)) { throw new TypeError('identity-confused descriptor') }\n\n        return d\n      }\n\n      if (!isObject(obj)) throw new TypeError('bad obj')\n\n      properties = Object(properties)\n\n      const keys = Object.keys(properties)\n      const descs: [PropertyKey, Record<PropertyKey, unknown>][] = []\n\n      for (let i = 0; i < keys.length; i++) {\n        descs.push([keys[i], convertToDescriptor(properties[keys[i]])])\n      }\n\n      for (let i = 0; i < descs.length; i++) {\n        Object.defineProperty(obj, descs[i][0], descs[i][1])\n      }\n\n      return obj\n    }\n  }\n}\n"],"names":[],"mappings":";;SAEgB,0BAA0B,GAAA;AACxC,IAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;;AAE9B,QAAA,MAAM,CAAC,MAAM,GAAG,UAAU,MAAM,EAAA;AAC9B,YAAA,IAAI,MAAM,IAAI,IAAI,EAAE;AAClB,gBAAA,MAAM,IAAI,SAAS,CAAC,4CAA4C,CAAC,CAAA;AAClE,aAAA;AAED,YAAA,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA;AAEzB,YAAA,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;AACrD,gBAAA,MAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,CAAA;AAEnC,gBAAA,IAAI,UAAU,IAAI,IAAI,EAAE;AACtB,oBAAA,KAAK,MAAM,OAAO,IAAI,UAAU,EAAE;;AAEhC,wBAAA,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,EAAE;4BAC7D,EAAE,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,CAAA;AAClC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE,CAAA;AACX,SAAC,CAAA;AACF,KAAA;AACH,CAAC;SAEe,2BAA2B,GAAA;AACzC,IAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;;AAE/B,QAAA,MAAM,CAAC,OAAO,GAAG,UAAU,GAAG,EAAA;AAC5B,YAAA,IAAI,GAAG,IAAI,IAAI,EAAE;AACf,gBAAA,MAAM,IAAI,SAAS,CAAC,4CAA4C,CAAC,CAAA;AAClE,aAAA;YAED,MAAM,EAAE,GAAwB,EAAE,CAAA;AAElC,YAAA,IAAI,GAAG,IAAI,IAAI,EAAE;AACf,gBAAA,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;;AAErB,oBAAA,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;AAClD,wBAAA,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AACzB,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE,CAAA;AACX,SAAC,CAAA;AACF,KAAA;AACH,CAAC;SAEe,kCAAkC,GAAA;AAChD,IAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE;AACxC,QAAA,MAAM,CAAC,gBAAgB,GAAG,UAAU,GAAG,EAAE,UAA6D,EAAA;YACpG,SAAS,mBAAmB,CAAE,IAA6B,EAAA;AACzD,gBAAA,SAAS,WAAW,CAAE,GAAG,EAAE,IAAI,EAAA;AAC7B,oBAAA,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;iBACvD;AAED,gBAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AAAE,oBAAA,MAAM,IAAI,SAAS,CAAC,UAAU,CAAC,CAAA;AAAE,iBAAA;gBAExD,MAAM,CAAC,GAAiC,EAAE,CAAA;AAE1C,gBAAA,IAAI,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC;oBAAE,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAA;AACrE,gBAAA,IAAI,WAAW,CAAC,IAAI,EAAE,cAAc,CAAC,EAAE;oBAAE,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAA;AAAE,iBAAA;AAC/E,gBAAA,IAAI,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC;AAAE,oBAAA,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;AACpD,gBAAA,IAAI,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC;oBAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAA;AAC/D,gBAAA,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;AAC5B,oBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAA;oBAElB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;AAAE,wBAAA,MAAM,IAAI,SAAS,CAAC,SAAS,CAAC,CAAA;AAAE,qBAAA;AACzE,oBAAA,CAAC,CAAC,GAAG,GAAG,CAAC,CAAA;AACV,iBAAA;AACD,gBAAA,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;AAC5B,oBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAA;oBAClB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;AAAE,wBAAA,MAAM,IAAI,SAAS,CAAC,SAAS,CAAC,CAAA;AAAE,qBAAA;AACzE,oBAAA,CAAC,CAAC,GAAG,GAAG,CAAC,CAAA;AACV,iBAAA;AAED,gBAAA,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,OAAO,IAAI,CAAC,IAAI,UAAU,IAAI,CAAC,CAAC,EAAE;AAAE,oBAAA,MAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,CAAA;AAAE,iBAAA;AAE5H,gBAAA,OAAO,CAAC,CAAA;aACT;AAED,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;AAAE,gBAAA,MAAM,IAAI,SAAS,CAAC,SAAS,CAAC,CAAA;AAElD,YAAA,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAA;YAE/B,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;YACpC,MAAM,KAAK,GAAkD,EAAE,CAAA;AAE/D,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AAChE,aAAA;AAED,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AACrD,aAAA;AAED,YAAA,OAAO,GAAG,CAAA;AACZ,SAAC,CAAA;AACF,KAAA;AACH;;;;"}