{"version":3,"file":"root.js","sources":["../../src/dom/root.ts"],"sourcesContent":["import { hooks, isArray, isFunction, isUndefined, Shortcuts } from '@tarojs/shared'\n\nimport {\n  CUSTOM_WRAPPER,\n  PAGE_INIT,\n  ROOT_STR,\n  SET_DATA\n} from '../constants'\nimport { options } from '../options'\nimport { perf } from '../perf'\nimport { customWrapperCache, isComment } from '../utils'\nimport { TaroElement } from './element'\n\nimport type { HydratedData, MpInstance, TFunc, UpdatePayload, UpdatePayloadValue } from '../interface'\n\nfunction findCustomWrapper (root: TaroRootElement, dataPathArr: string[]) {\n  // ['root', 'cn', '[0]'] remove 'root' => ['cn', '[0]']\n  const list = dataPathArr.slice(1)\n  let currentData: any = root\n  let customWrapper: Record<string, any> | undefined\n  let splitedPath = ''\n\n  list.some((item, i) => {\n    const key = item\n      // '[0]' => '0'\n      .replace(/^\\[(.+)\\]$/, '$1')\n      // 'cn' => 'childNodes'\n      .replace(/\\bcn\\b/g, 'childNodes')\n\n    currentData = currentData[key]\n\n    if (isArray(currentData)) {\n      currentData = currentData.filter(el => !isComment(el))\n    }\n\n    if (isUndefined(currentData)) return true\n\n    if (currentData.nodeName === CUSTOM_WRAPPER) {\n      const res = customWrapperCache.get(currentData.sid)\n      if (res) {\n        customWrapper = res\n        splitedPath = dataPathArr.slice(i + 2).join('.')\n      }\n    }\n  })\n\n  if (customWrapper) {\n    return {\n      customWrapper,\n      splitedPath\n    }\n  }\n}\n\nexport class TaroRootElement extends TaroElement {\n  private updatePayloads: UpdatePayload[] = []\n\n  private updateCallbacks: TFunc[] = []\n\n  public pendingUpdate = false\n\n  public ctx: null | MpInstance = null\n\n  public constructor () {\n    super()\n    this.nodeName = ROOT_STR\n    this.tagName = ROOT_STR.toUpperCase()\n  }\n\n  public get _path (): string {\n    return ROOT_STR\n  }\n\n  public get _root (): TaroRootElement {\n    return this\n  }\n\n  public enqueueUpdate (payload: UpdatePayload): void {\n    this.updatePayloads.push(payload)\n\n    if (!this.pendingUpdate && this.ctx) {\n      this.performUpdate()\n    }\n  }\n\n  public performUpdate (initRender = false, prerender?: TFunc) {\n    this.pendingUpdate = true\n\n    const ctx = hooks.call('proxyToRaw', this.ctx)!\n\n    setTimeout(() => {\n      const setDataMark = `${SET_DATA} 开始时间戳 ${Date.now()}`\n      perf.start(setDataMark)\n      const data: Record<string, UpdatePayloadValue | ReturnType<HydratedData>> = Object.create(null)\n      const resetPaths = new Set<string>(\n        initRender\n          ? ['root.cn.[0]', 'root.cn[0]']\n          : []\n      )\n\n      while (this.updatePayloads.length > 0) {\n        const { path, value } = this.updatePayloads.shift()!\n        if (path.endsWith(Shortcuts.Childnodes)) {\n          resetPaths.add(path)\n        }\n        data[path] = value\n      }\n\n      for (const path in data) {\n        resetPaths.forEach(p => {\n          // 已经重置了数组，就不需要分别再设置了\n          if (path.includes(p) && path !== p) {\n            delete data[path]\n          }\n        })\n\n        const value = data[path]\n        if (isFunction(value)) {\n          data[path] = value()\n        }\n      }\n\n      // 预渲染\n      if (isFunction(prerender)) return prerender(data)\n\n      // 正常渲染\n      this.pendingUpdate = false\n      let normalUpdate = {}\n      const customWrapperMap: Map<Record<any, any>, Record<string, any>> = new Map()\n\n      if (initRender) {\n        // 初次渲染，使用页面级别的 setData\n        normalUpdate = data\n      } else {\n        // 更新渲染，区分 CustomWrapper 与页面级别的 setData\n        for (const p in data) {\n          const dataPathArr = p.split('.')\n          const found = findCustomWrapper(this, dataPathArr)\n          if (found) {\n            // 此项数据使用 CustomWrapper 去更新\n            const { customWrapper, splitedPath } = found\n            // 合并同一个 customWrapper 的相关更新到一次 setData 中\n            customWrapperMap.set(customWrapper, {\n              ...(customWrapperMap.get(customWrapper) || {}),\n              [`i.${splitedPath}`]: data[p]\n            })\n          } else {\n            // 此项数据使用页面去更新\n            normalUpdate[p] = data[p]\n          }\n        }\n      }\n\n      const customWrapperCount = customWrapperMap.size\n      const isNeedNormalUpdate = Object.keys(normalUpdate).length > 0\n      const updateArrLen = customWrapperCount + (isNeedNormalUpdate ? 1 : 0)\n      let executeTime = 0\n\n      const cb = () => {\n        if (++executeTime === updateArrLen) {\n          perf.stop(setDataMark)\n          this.flushUpdateCallback()\n          initRender && perf.stop(PAGE_INIT)\n        }\n      }\n\n      // custom-wrapper setData\n      if (customWrapperCount) {\n        customWrapperMap.forEach((data, ctx) => {\n          if (process.env.NODE_ENV !== 'production' && options.debug) {\n            // eslint-disable-next-line no-console\n            console.log('custom wrapper setData: ', data)\n          }\n          ctx.setData(data, cb)\n        })\n      }\n\n      // page setData\n      if (isNeedNormalUpdate) {\n        if (process.env.NODE_ENV !== 'production' && options.debug) {\n          // eslint-disable-next-line no-console\n          console.log('page setData:', normalUpdate)\n        }\n        ctx.setData(normalUpdate, cb)\n      }\n    }, 0)\n  }\n\n  public enqueueUpdateCallback (cb: TFunc, ctx?: Record<string, any>) {\n    this.updateCallbacks.push(() => {\n      ctx ? cb.call(ctx) : cb()\n    })\n  }\n\n  public flushUpdateCallback () {\n    const updateCallbacks = this.updateCallbacks\n    if (!updateCallbacks.length) return\n\n    const copies = updateCallbacks.slice(0)\n    this.updateCallbacks.length = 0\n    for (let i = 0; i < copies.length; i++) {\n      copies[i]()\n    }\n  }\n}\n"],"names":[],"mappings":"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"}