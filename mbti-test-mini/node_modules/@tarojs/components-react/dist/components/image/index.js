import _classCallCheck from '@babel/runtime/helpers/classCallCheck';
import _createClass from '@babel/runtime/helpers/createClass';
import _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';
import _inherits from '@babel/runtime/helpers/inherits';
import _createSuper from '@babel/runtime/helpers/createSuper';
import { __rest } from 'tslib';
import './style/index.css.js';
import classNames from 'classnames';
import React from 'react';

var Image = /*#__PURE__*/function (_React$Component) {
  _inherits(Image, _React$Component);
  var _super = _createSuper(Image);
  function Image(props) {
    var _this;
    _classCallCheck(this, Image);
    _this = _super.call(this, props);
    _this.observer = {};
    _this.imgRef = null;
    _this.state = {
      isLoaded: false
    };
    _this.imageOnLoad = _this.imageOnLoad.bind(_assertThisInitialized(_this));
    // this.observer = {}
    return _this;
  }
  _createClass(Image, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      if (this.props.lazyLoad) {
        this.observer = new IntersectionObserver(function (entries) {
          // 异步 api 关系
          if (entries[entries.length - 1].isIntersecting) {
            _this2.setState({
              isLoaded: true
            }, function () {
              // findDOMNode(this).children[0].src = this.props.src
              _this2.imgRef.src = _this2.props.src;
            });
          }
        }, {
          rootMargin: '300px 0px'
        });
        this.observer.observe(this.imgRef);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.observer.disconnect && this.observer.disconnect();
    }
  }, {
    key: "imageOnLoad",
    value: function imageOnLoad(e) {
      var onLoad = this.props.onLoad;
      Object.defineProperty(e, 'detail', {
        enumerable: true,
        writable: true,
        value: {
          width: e.target.width,
          height: e.target.height
        }
      });
      onLoad && onLoad(e);
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;
      var _a = this.props,
        className = _a.className,
        _a$style = _a.style,
        style = _a$style === void 0 ? {} : _a$style,
        src = _a.src,
        mode = _a.mode,
        onError = _a.onError,
        lazyLoad = _a.lazyLoad,
        imgProps = _a.imgProps,
        reset = __rest(_a, ["className", "style", "src", "mode", "onError", "lazyLoad", "imgProps"]);
      var cls = classNames('taro-img', {
        'taro-img__widthfix': mode === 'widthFix'
      }, className);
      var imgCls = classNames('taro-img__mode-' + (mode || 'scaleToFill').toLowerCase().replace(/\s/g, ''));
      return React.createElement("div", Object.assign({
        className: cls,
        style: style
      }, reset), lazyLoad ? React.createElement("img", Object.assign({
        ref: function ref(img) {
          return _this3.imgRef = img;
        },
        className: imgCls,
        "data-src": src,
        onLoad: this.imageOnLoad,
        onError: onError
      }, imgProps)) : React.createElement("img", Object.assign({
        ref: function ref(img) {
          return _this3.imgRef = img;
        },
        className: imgCls,
        src: src,
        onLoad: this.imageOnLoad,
        onError: onError
      }, imgProps)));
    }
  }]);
  return Image;
}(React.Component);

export { Image as default };
//# sourceMappingURL=index.js.map
