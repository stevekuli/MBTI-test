{"version":3,"names":["_nativeInterface","_interopRequireDefault","require","_invariant","_utils","obj","__esModule","default","RNCGeolocation","GeolocationEventEmitter","GeolocationNativeInterface","subscriptions","updatesEnabled","setRNConfiguration","config","setConfiguration","authorizationLevel","undefined","locationProvider","requestAuthorization","success","arguments","length","error","logError","getCurrentPosition","options","invariant","watchPosition","startObserving","watchID","push","addListener","clearWatch","sub","remove","sub1","noWatchers","ii","stopObserving","warning"],"sources":["implementation.native.ts"],"sourcesContent":["/**\n * Copyright (c) React Native Community\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type { EmitterSubscription } from 'react-native';\n\nimport GeolocationNativeInterface from './nativeInterface';\n\nimport invariant from 'invariant';\nimport { logError, warning } from './utils';\n\nimport type {\n  GeolocationOptions,\n  GeolocationConfiguration,\n  GeolocationResponse,\n  GeolocationError,\n} from './NativeRNCGeolocation';\n\nconst { RNCGeolocation, GeolocationEventEmitter } = GeolocationNativeInterface;\n\nlet subscriptions: (\n  | [EmitterSubscription, EmitterSubscription | null]\n  | undefined\n)[] = [];\nlet updatesEnabled = false;\n\n/**\n * The Geolocation API extends the web spec:\n * https://developer.mozilla.org/en-US/docs/Web/API/Geolocation\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html\n */\n\n/*\n * Sets configuration options that will be used in all location requests.\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html#setrnconfiguration\n *\n */\nexport function setRNConfiguration(config: GeolocationConfiguration) {\n  RNCGeolocation.setConfiguration({\n    ...config,\n    authorizationLevel:\n      config?.authorizationLevel === 'auto'\n        ? undefined\n        : config.authorizationLevel,\n    locationProvider:\n      config?.locationProvider === 'auto' ? undefined : config.locationProvider,\n  });\n}\n\n/*\n * Requests Location permissions based on the key configured on pList.\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html#requestauthorization\n */\nexport function requestAuthorization(\n  success: () => void = () => {},\n  error: (error: GeolocationError) => void = logError\n) {\n  RNCGeolocation.requestAuthorization(success, error);\n}\n\n/*\n * Invokes the success callback once with the latest location info.\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html#getcurrentposition\n */\nexport async function getCurrentPosition(\n  success: (position: GeolocationResponse) => void,\n  error: (error: GeolocationError) => void = logError,\n  options: GeolocationOptions = {}\n) {\n  invariant(\n    typeof success === 'function',\n    'Must provide a valid geo_success callback.'\n  );\n  // Permission checks/requests are done on the native side\n  RNCGeolocation.getCurrentPosition(options, success, error);\n}\n\n/*\n * Invokes the success callback whenever the location changes.\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html#watchposition\n */\nexport function watchPosition(\n  success: (position: GeolocationResponse) => void,\n  error: (error: GeolocationError) => void = logError,\n  options: GeolocationOptions = {}\n): number {\n  if (!updatesEnabled) {\n    RNCGeolocation.startObserving(options);\n    updatesEnabled = true;\n  }\n  const watchID = subscriptions.length;\n  subscriptions.push([\n    GeolocationEventEmitter.addListener('geolocationDidChange', success),\n    error\n      ? GeolocationEventEmitter.addListener('geolocationError', error)\n      : null,\n  ]);\n  return watchID;\n}\n\n/*\n * Unsubscribes the watcher with the given watchID.\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html#clearwatch\n */\nexport function clearWatch(watchID: number) {\n  const sub = subscriptions[watchID];\n  if (!sub) {\n    // Silently exit when the watchID is invalid or already cleared\n    // This is consistent with timers\n    return;\n  }\n\n  sub[0].remove();\n  // array element refinements not yet enabled in Flow\n  const sub1 = sub[1];\n  sub1 && sub1.remove();\n  subscriptions[watchID] = undefined;\n  let noWatchers = true;\n  for (let ii = 0; ii < subscriptions.length; ii++) {\n    if (subscriptions[ii]) {\n      noWatchers = false; // still valid subscriptions\n    }\n  }\n  if (noWatchers) {\n    stopObserving();\n  }\n}\n\n/*\n * Stops observing for device location changes and removes all registered listeners.\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html#stopobserving\n */\nexport function stopObserving() {\n  if (updatesEnabled) {\n    RNCGeolocation.stopObserving();\n    updatesEnabled = false;\n    for (let ii = 0; ii < subscriptions.length; ii++) {\n      const sub = subscriptions[ii];\n      if (sub) {\n        warning(false, 'Called stopObserving with existing subscriptions.');\n        sub[0].remove();\n        // array element refinements not yet enabled in Flow\n        const sub1 = sub[1];\n        sub1 && sub1.remove();\n      }\n    }\n    subscriptions = [];\n  }\n}\n"],"mappings":"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"}