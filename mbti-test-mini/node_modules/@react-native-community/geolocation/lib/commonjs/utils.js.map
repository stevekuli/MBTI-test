{"version":3,"names":["Object","defineProperty","exports","value","warning","logError","_len","arguments","length","args","Array","_key","Error","err","console","error","message","stack","apply","__DEV__","condition","format","_len2","_key2","undefined","argIndex","replace","x"],"sources":["utils.ts"],"sourcesContent":["/**\n * Copyright (c) React Native Community\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\n/**\n * Small utility that can be used as an error handler. You cannot just pass\n * `console.error` as a failure callback - it's not properly bound.  If passes an\n * `Error` object, it will print the message and stack.\n */\nexport const logError = function (...args: unknown[]) {\n  if (args.length === 1 && args[0] instanceof Error) {\n    const err = args[0];\n    console.error('Error: \"' + err.message + '\".  Stack:\\n' + err.stack);\n  } else {\n    console.error.apply(console, args);\n  }\n};\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\nexport const warning = __DEV__\n  ? function (condition: boolean, format: string, ...args: any[]) {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument'\n        );\n      }\n      if (!condition) {\n        var argIndex = 0;\n        var message =\n          'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n        if (typeof console !== 'undefined') {\n          console.error(message);\n        }\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      }\n    }\n  : () => {};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AAJAA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,OAAA,GAAAF,OAAA,CAAAG,QAAA;AAKO,MAAMA,QAAQ,GAAG,SAAAA,CAAA,EAA8B;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAjBC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACvC,IAAIF,IAAI,CAACD,MAAM,KAAK,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC,YAAYG,KAAK,EAAE;IACjD,MAAMC,GAAG,GAAGJ,IAAI,CAAC,CAAC,CAAC;IACnBK,OAAO,CAACC,KAAK,CAAC,UAAU,GAAGF,GAAG,CAACG,OAAO,GAAG,cAAc,GAAGH,GAAG,CAACI,KAAK,CAAC;EACtE,CAAC,MAAM;IACLH,OAAO,CAACC,KAAK,CAACG,KAAK,CAACJ,OAAO,EAAEL,IAAI,CAAC;EACpC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AALAP,OAAA,CAAAG,QAAA,GAAAA,QAAA;AAMO,MAAMD,OAAO,GAAGe,OAAO,GAC1B,UAAUC,SAAkB,EAAEC,MAAc,EAAkB;EAAA,SAAAC,KAAA,GAAAf,SAAA,CAAAC,MAAA,EAAbC,IAAI,OAAAC,KAAA,CAAAY,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAAJd,IAAI,CAAAc,KAAA,QAAAhB,SAAA,CAAAgB,KAAA;EAAA;EACnD,IAAIF,MAAM,KAAKG,SAAS,EAAE;IACxB,MAAM,IAAIZ,KAAK,CACb,2DAA2D,GACzD,kBAAkB,CACrB;EACH;EACA,IAAI,CAACQ,SAAS,EAAE;IACd,IAAIK,QAAQ,GAAG,CAAC;IAChB,IAAIT,OAAO,GACT,WAAW,GAAGK,MAAM,CAACK,OAAO,CAAC,KAAK,EAAE,MAAMjB,IAAI,CAACgB,QAAQ,EAAE,CAAC,CAAC;IAC7D,IAAI,OAAOX,OAAO,KAAK,WAAW,EAAE;MAClCA,OAAO,CAACC,KAAK,CAACC,OAAO,CAAC;IACxB;IACA,IAAI;MACF;MACA;MACA;MACA,MAAM,IAAIJ,KAAK,CAACI,OAAO,CAAC;IAC1B,CAAC,CAAC,OAAOW,CAAC,EAAE,CAAC;EACf;AACF,CAAC,GACD,MAAM,CAAC,CAAC;AAACzB,OAAA,CAAAE,OAAA,GAAAA,OAAA"}