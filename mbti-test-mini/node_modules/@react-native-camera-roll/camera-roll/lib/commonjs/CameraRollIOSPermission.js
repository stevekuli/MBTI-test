"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosRequestReadWriteGalleryPermission = exports.iosRequestAddOnlyGalleryPermission = exports.iosRefreshGallerySelection = exports.iosReadGalleryPermission = exports.cameraRollEventEmitter = void 0;

var _reactNative = require("react-native");

var _cameraRollPermissionNativeInterface = _interopRequireDefault(require("./cameraRollPermissionNativeInterface"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const isIOS = _reactNative.Platform.OS === 'ios';

if (isIOS && _cameraRollPermissionNativeInterface.default == null) {
  console.error("photoLibraryPermissionModule: Native Module 'photoLibraryPermissionModule' was null! Did you run pod install?");
}

const cameraRollEventEmitter = new _reactNative.NativeEventEmitter(isIOS ? _cameraRollPermissionNativeInterface.default : undefined);
exports.cameraRollEventEmitter = cameraRollEventEmitter;

const iosReadGalleryPermission = accessLevel => {
  if (!isIOS) throw new Error('this module is available only for ios');
  return _cameraRollPermissionNativeInterface.default.checkPermission(accessLevel);
};

exports.iosReadGalleryPermission = iosReadGalleryPermission;

const iosRequestReadWriteGalleryPermission = () => {
  if (!isIOS) throw new Error('this module is available only for ios');
  return _cameraRollPermissionNativeInterface.default.requestReadWritePermission();
};

exports.iosRequestReadWriteGalleryPermission = iosRequestReadWriteGalleryPermission;

const iosRequestAddOnlyGalleryPermission = () => {
  if (!isIOS) throw new Error('this module is available only for ios');
  return _cameraRollPermissionNativeInterface.default.requestAddOnlyPermission();
};

exports.iosRequestAddOnlyGalleryPermission = iosRequestAddOnlyGalleryPermission;

const iosRefreshGallerySelection = () => {
  if (!isIOS) throw new Error('this module is available only for ios');
  return _cameraRollPermissionNativeInterface.default.refreshPhotoSelection();
};

exports.iosRefreshGallerySelection = iosRefreshGallerySelection;
//# sourceMappingURL=CameraRollIOSPermission.js.map