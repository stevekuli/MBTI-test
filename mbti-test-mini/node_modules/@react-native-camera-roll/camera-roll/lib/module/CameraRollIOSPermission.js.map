{"version":3,"names":["NativeEventEmitter","Platform","CameraRollPermissionModule","isIOS","OS","console","error","cameraRollEventEmitter","undefined","iosReadGalleryPermission","accessLevel","Error","checkPermission","iosRequestReadWriteGalleryPermission","requestReadWritePermission","iosRequestAddOnlyGalleryPermission","requestAddOnlyPermission","iosRefreshGallerySelection","refreshPhotoSelection"],"sources":["CameraRollIOSPermission.ts"],"sourcesContent":["import {NativeEventEmitter, Platform} from 'react-native';\nimport CameraRollPermissionModule from './cameraRollPermissionNativeInterface';\n\n/** Defines ios permission access levels for gallery */\nexport type AccessLevel = 'addOnly' | 'readWrite';\n\nexport type CameraRollAuthorizationStatus =\n  | 'granted'\n  | 'limited'\n  | 'denied'\n  | 'unavailable'\n  | 'blocked'\n  | 'not-determined';\n\nconst isIOS = Platform.OS === 'ios';\nif (isIOS && CameraRollPermissionModule == null) {\n  console.error(\n    \"photoLibraryPermissionModule: Native Module 'photoLibraryPermissionModule' was null! Did you run pod install?\",\n  );\n}\nexport const cameraRollEventEmitter = new NativeEventEmitter(\n  isIOS ? CameraRollPermissionModule : undefined,\n);\n\nexport const iosReadGalleryPermission = (\n  accessLevel: AccessLevel,\n): Promise<CameraRollAuthorizationStatus> => {\n  if (!isIOS) throw new Error('this module is available only for ios');\n\n  return CameraRollPermissionModule.checkPermission(accessLevel);\n};\n\nexport const iosRequestReadWriteGalleryPermission =\n  (): Promise<CameraRollAuthorizationStatus> => {\n    if (!isIOS) throw new Error('this module is available only for ios');\n\n    return CameraRollPermissionModule.requestReadWritePermission();\n  };\n\nexport const iosRequestAddOnlyGalleryPermission =\n  (): Promise<CameraRollAuthorizationStatus> => {\n    if (!isIOS) throw new Error('this module is available only for ios');\n\n    return CameraRollPermissionModule.requestAddOnlyPermission();\n  };\n\nexport const iosRefreshGallerySelection = (): Promise<boolean> => {\n  if (!isIOS) throw new Error('this module is available only for ios');\n\n  return CameraRollPermissionModule.refreshPhotoSelection();\n};\n"],"mappings":"AAAA,SAAQA,kBAAR,EAA4BC,QAA5B,QAA2C,cAA3C;AACA,OAAOC,0BAAP,MAAuC,uCAAvC;AAEA;;AAWA,MAAMC,KAAK,GAAGF,QAAQ,CAACG,EAAT,KAAgB,KAA9B;;AACA,IAAID,KAAK,IAAID,0BAA0B,IAAI,IAA3C,EAAiD;EAC/CG,OAAO,CAACC,KAAR,CACE,+GADF;AAGD;;AACD,OAAO,MAAMC,sBAAsB,GAAG,IAAIP,kBAAJ,CACpCG,KAAK,GAAGD,0BAAH,GAAgCM,SADD,CAA/B;AAIP,OAAO,MAAMC,wBAAwB,GACnCC,WADsC,IAEK;EAC3C,IAAI,CAACP,KAAL,EAAY,MAAM,IAAIQ,KAAJ,CAAU,uCAAV,CAAN;EAEZ,OAAOT,0BAA0B,CAACU,eAA3B,CAA2CF,WAA3C,CAAP;AACD,CANM;AAQP,OAAO,MAAMG,oCAAoC,GAC/C,MAA8C;EAC5C,IAAI,CAACV,KAAL,EAAY,MAAM,IAAIQ,KAAJ,CAAU,uCAAV,CAAN;EAEZ,OAAOT,0BAA0B,CAACY,0BAA3B,EAAP;AACD,CALI;AAOP,OAAO,MAAMC,kCAAkC,GAC7C,MAA8C;EAC5C,IAAI,CAACZ,KAAL,EAAY,MAAM,IAAIQ,KAAJ,CAAU,uCAAV,CAAN;EAEZ,OAAOT,0BAA0B,CAACc,wBAA3B,EAAP;AACD,CALI;AAOP,OAAO,MAAMC,0BAA0B,GAAG,MAAwB;EAChE,IAAI,CAACd,KAAL,EAAY,MAAM,IAAIQ,KAAJ,CAAU,uCAAV,CAAN;EAEZ,OAAOT,0BAA0B,CAACgB,qBAA3B,EAAP;AACD,CAJM"}