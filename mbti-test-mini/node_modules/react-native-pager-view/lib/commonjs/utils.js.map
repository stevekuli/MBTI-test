{"version":3,"sources":["utils.tsx"],"names":["childrenWithOverriddenStyle","children","Children","map","child","element","StyleSheet","absoluteFill","React","cloneElement","props","style"],"mappings":";;;;;;;AAUA;;AACA;;;;;;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKO,MAAMA,2BAA2B,GAAIC,QAAD,IAA0B;AACnE,SAAOC,gBAASC,GAAT,CAAaF,QAAb,EAAwBG,KAAD,IAAW;AACvC,UAAMC,OAAO,GAAGD,KAAhB;AACA;AAAA;AACE;AACA,mCAAC,iBAAD;AAAM,QAAA,KAAK,EAAEE,wBAAWC,YAAxB;AAAsC,QAAA,WAAW,EAAE;AAAnD,sBACGC,eAAMC,YAAN,CAAmBJ,OAAnB,EAA4B,EAC3B,GAAGA,OAAO,CAACK,KADgB;AAE3B;AACAC,QAAAA,KAAK,EAAE,CAACN,OAAO,CAACK,KAAR,CAAcC,KAAf,EAAsBL,wBAAWC,YAAjC;AAHoB,OAA5B,CADH;AAFF;AAUD,GAZM,CAAP;AAaD,CAdM","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport React, { Children, ReactNode } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport const childrenWithOverriddenStyle = (children?: ReactNode) => {\n  return Children.map(children, (child) => {\n    const element = child as React.ReactElement;\n    return (\n      // Add a wrapper to ensure layout is calculated correctly\n      <View style={StyleSheet.absoluteFill} collapsable={false}>\n        {React.cloneElement(element, {\n          ...element.props,\n          // Override styles so that each page will fill the parent.\n          style: [element.props.style, StyleSheet.absoluteFill],\n        })}\n      </View>\n    );\n  });\n};\n"]}